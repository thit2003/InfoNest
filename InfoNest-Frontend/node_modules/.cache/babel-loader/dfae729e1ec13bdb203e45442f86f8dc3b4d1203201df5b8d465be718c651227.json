{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-React-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // For redirection\nimport axios from 'axios'; // For making API calls\nimport '../styles/Home.css'; // Import the CSS file\n\n// Placeholder images - you'll need to move your logo.png and avatar.png\n// into the public/ or src/assets/ folder and import them properly in React.\n// For now, let's assume they are directly in public/ or you can use placeholder URLs.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infonestLogo = '/logo.png'; // Assuming logo.png is in public/\nconst userAvatar = '/avatar.png'; // Assuming avatar.png is in public/\n\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate(); // Hook for navigation\n  const [username, setUsername] = useState('User');\n  const [messages, setMessages] = useState([]); // Stores { sender: 'user'/'bot', text: '...' }\n  const [chatInput, setChatInput] = useState('');\n  const [sidebarHistory, setSidebarHistory] = useState([]); // For the Recent list in sidebar\n\n  const API_BASE_URL = 'http://localhost:8000/api';\n\n  // --- Authentication Check and Fetch Initial Data on Mount ---\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    if (!token) {\n      alert('You are not logged in. Please log in first.');\n      navigate('/login'); // Redirect to login page\n      return;\n    }\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n    fetchChatHistory(token); // Fetch history when component mounts\n  }, [navigate]); // Dependency array: run once on mount, or if navigate function changes (rare)\n\n  // --- Function to Fetch Chat History ---\n  const fetchChatHistory = async token => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const historyData = response.data.data;\n        const formattedMessages = [];\n        const newSidebarHistory = [];\n        historyData.forEach(entry => {\n          formattedMessages.push({\n            sender: 'user',\n            text: entry.userMessage\n          });\n          formattedMessages.push({\n            sender: 'bot',\n            text: entry.botResponse\n          });\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...'); // Truncate for sidebar\n        });\n        setMessages(formattedMessages);\n        setSidebarHistory(newSidebarHistory);\n        if (formattedMessages.length === 0) {\n          setMessages([{\n            sender: 'bot',\n            text: 'Hello! How can I help you today?'\n          }]);\n        }\n      } else {\n        console.error('Failed to fetch chat history:', response.data.error);\n        alert('Could not load chat history. Please try again.');\n      }\n    } catch (error) {\n      console.error('Network error fetching chat history:', error);\n      if (error.response && error.response.status === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else {\n        alert('Network error. Could not connect to server for history.');\n      }\n    }\n  };\n\n  // --- Function to Send Message to Chatbot ---\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem('token');\n    if (!token || messageText.trim() === '') return;\n    const userMessage = {\n      sender: 'user',\n      text: messageText\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]); // Optimistic update\n\n    setChatInput(''); // Clear input field\n\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.botResponse;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: botResponse\n        }]);\n        // Update sidebar with last user message\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\n      } else {\n        const errorData = response.data;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: `Error: ${errorData.error || 'Failed to get bot response.'}`\n        }]);\n        console.error('Bot response error:', errorData);\n      }\n    } catch (error) {\n      console.error('Network error sending message:', error);\n      let errorMessage = 'Network error. Could not connect to chatbot.';\n      if (error.response && error.response.status === 401) {\n        errorMessage = 'Session expired. Please log in again.';\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else if (error.response && error.response.data && error.response.data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: errorMessage\n      }]);\n    }\n  };\n\n  // --- Event Handlers ---\n  const handleChatInputChange = e => {\n    setChatInput(e.target.value);\n  };\n  const handleSendButtonClick = () => {\n    sendMessage(chatInput);\n  };\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage(chatInput);\n    }\n  };\n  const handleQuickQuestionClick = e => {\n    sendMessage(e.target.textContent);\n  };\n\n  // Auto-scroll messages to bottom\n  useEffect(() => {\n    const messagesContainer = document.querySelector('.chat-messages-container');\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages]); // Scroll whenever messages state updates\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: infonestLogo,\n          alt: \"InfoNest Logo\",\n          className: \"circle-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"InfoNest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        children: \"\\u270F\\uFE0F New chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"recent-title\",\n        children: \"Recent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"recent-list\",\n        children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: entry\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-footer\",\n        children: \"\\u2699\\uFE0F Settings & Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userAvatar,\n          alt: \"User Avatar\",\n          className: \"avatar-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"greeting\",\n        children: [\"Hello, \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"userNameGreeting\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 41\n        }, this), \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: 'none',\n            padding: '0'\n          },\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '10px',\n              padding: '8px 12px',\n              borderRadius: '15px',\n              maxWidth: '70%',\n              wordWrap: 'break-word',\n              backgroundColor: msg.sender === 'user' ? '#dcf8c6' : '#e0e0e0',\n              marginLeft: msg.sender === 'user' ? 'auto' : '0',\n              marginRight: msg.sender === 'user' ? '0' : 'auto',\n              textAlign: msg.sender === 'user' ? 'right' : 'left'\n            },\n            children: msg.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quick-question-btn\",\n          onClick: handleQuickQuestionClick,\n          children: \"What is Assumption University?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quick-question-btn\",\n          onClick: handleQuickQuestionClick,\n          children: \"How can I enroll as an international student?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quick-question-btn\",\n          onClick: handleQuickQuestionClick,\n          children: \"Give me study plan for bachelor of Computer Science\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ask-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"chatInput\",\n          placeholder: \"Ask InfoNest anything\",\n          value: chatInput,\n          onChange: handleChatInputChange,\n          onKeyPress: handleInputKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sendChatBtn\",\n          onClick: handleSendButtonClick,\n          style: {\n            padding: '10px 15px',\n            borderRadius: '20px',\n            border: 'none',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            cursor: 'pointer',\n            marginLeft: '10px'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"pEWFrdg/5SMr9fDxJKqZ50JSxBE=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","infonestLogo","userAvatar","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","API_BASE_URL","token","localStorage","getItem","storedUsername","alert","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","substring","length","console","error","removeItem","sendMessage","messageText","trim","prevMessages","post","message","prevSidebar","errorData","errorMessage","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleQuickQuestionClick","textContent","messagesContainer","document","querySelector","scrollTop","scrollHeight","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","id","style","listStyle","padding","msg","marginBottom","borderRadius","maxWidth","wordWrap","backgroundColor","marginLeft","marginRight","textAlign","onClick","type","placeholder","onChange","onKeyPress","border","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-React-Frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // For redirection\r\nimport axios from 'axios'; // For making API calls\r\nimport '../styles/Home.css'; // Import the CSS file\r\n\r\n// Placeholder images - you'll need to move your logo.png and avatar.png\r\n// into the public/ or src/assets/ folder and import them properly in React.\r\n// For now, let's assume they are directly in public/ or you can use placeholder URLs.\r\nconst infonestLogo = '/logo.png'; // Assuming logo.png is in public/\r\nconst userAvatar = '/avatar.png'; // Assuming avatar.png is in public/\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate(); // Hook for navigation\r\n  const [username, setUsername] = useState('User');\r\n  const [messages, setMessages] = useState([]); // Stores { sender: 'user'/'bot', text: '...' }\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [sidebarHistory, setSidebarHistory] = useState([]); // For the Recent list in sidebar\r\n\r\n  const API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n  // --- Authentication Check and Fetch Initial Data on Mount ---\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUsername = localStorage.getItem('username');\r\n\r\n    if (!token) {\r\n      alert('You are not logged in. Please log in first.');\r\n      navigate('/login'); // Redirect to login page\r\n      return;\r\n    }\r\n\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    }\r\n\r\n    fetchChatHistory(token); // Fetch history when component mounts\r\n  }, [navigate]); // Dependency array: run once on mount, or if navigate function changes (rare)\r\n\r\n  // --- Function to Fetch Chat History ---\r\n  const fetchChatHistory = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/history`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const historyData = response.data.data;\r\n        const formattedMessages = [];\r\n        const newSidebarHistory = [];\r\n\r\n        historyData.forEach(entry => {\r\n          formattedMessages.push({ sender: 'user', text: entry.userMessage });\r\n          formattedMessages.push({ sender: 'bot', text: entry.botResponse });\r\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...'); // Truncate for sidebar\r\n        });\r\n\r\n        setMessages(formattedMessages);\r\n        setSidebarHistory(newSidebarHistory);\r\n\r\n        if (formattedMessages.length === 0) {\r\n          setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n        }\r\n\r\n      } else {\r\n        console.error('Failed to fetch chat history:', response.data.error);\r\n        alert('Could not load chat history. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error fetching chat history:', error);\r\n      if (error.response && error.response.status === 401) {\r\n        alert('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        navigate('/login');\r\n      } else {\r\n        alert('Network error. Could not connect to server for history.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // --- Function to Send Message to Chatbot ---\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token || messageText.trim() === '') return;\r\n\r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]); // Optimistic update\r\n\r\n    setChatInput(''); // Clear input field\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/chat`,\r\n        { message: messageText },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const botResponse = response.data.botResponse;\r\n        setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: botResponse }]);\r\n        // Update sidebar with last user message\r\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: `Error: ${errorData.error || 'Failed to get bot response.'}` }]);\r\n        console.error('Bot response error:', errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error sending message:', error);\r\n      let errorMessage = 'Network error. Could not connect to chatbot.';\r\n      if (error.response && error.response.status === 401) {\r\n         errorMessage = 'Session expired. Please log in again.';\r\n         localStorage.removeItem('token');\r\n         localStorage.removeItem('username');\r\n         navigate('/login');\r\n      } else if (error.response && error.response.data && error.response.data.error) {\r\n         errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: errorMessage }]);\r\n    }\r\n  };\r\n\r\n  // --- Event Handlers ---\r\n  const handleChatInputChange = (e) => {\r\n    setChatInput(e.target.value);\r\n  };\r\n\r\n  const handleSendButtonClick = () => {\r\n    sendMessage(chatInput);\r\n  };\r\n\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage(chatInput);\r\n    }\r\n  };\r\n\r\n  const handleQuickQuestionClick = (e) => {\r\n    sendMessage(e.target.textContent);\r\n  };\r\n\r\n  // Auto-scroll messages to bottom\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector('.chat-messages-container');\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages]); // Scroll whenever messages state updates\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"logo-section\">\r\n          <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n          <h1>InfoNest</h1>\r\n        </div>\r\n\r\n        <button className=\"new-chat-btn\">✏️ New chat</button>\r\n\r\n        <p className=\"recent-title\">Recent</p>\r\n        <ul className=\"recent-list\">\r\n          {sidebarHistory.map((entry, index) => (\r\n            <li key={index}>{entry}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"settings-footer\">⚙️ Settings & Help</div>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <div className=\"avatar-container\">\r\n          <img src={userAvatar} alt=\"User Avatar\" className=\"avatar-img\" />\r\n        </div>\r\n\r\n        <h1 className=\"greeting\">Hello, <span id=\"userNameGreeting\">{username}</span>!</h1>\r\n\r\n        {/* Chat messages display area */}\r\n        <div className=\"chat-messages-container\">\r\n          <ul style={{ listStyle: 'none', padding: '0' }}>\r\n            {messages.map((msg, index) => (\r\n              <li\r\n                key={index}\r\n                style={{\r\n                  marginBottom: '10px',\r\n                  padding: '8px 12px',\r\n                  borderRadius: '15px',\r\n                  maxWidth: '70%',\r\n                  wordWrap: 'break-word',\r\n                  backgroundColor: msg.sender === 'user' ? '#dcf8c6' : '#e0e0e0',\r\n                  marginLeft: msg.sender === 'user' ? 'auto' : '0',\r\n                  marginRight: msg.sender === 'user' ? '0' : 'auto',\r\n                  textAlign: msg.sender === 'user' ? 'right' : 'left',\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"buttons-row\">\r\n          <button className=\"quick-question-btn\" onClick={handleQuickQuestionClick}>What is Assumption University?</button>\r\n          <button className=\"quick-question-btn\" onClick={handleQuickQuestionClick}>How can I enroll as an international student?</button>\r\n          <button className=\"quick-question-btn\" onClick={handleQuickQuestionClick}>Give me study plan for bachelor of Computer Science</button>\r\n        </div>\r\n\r\n        <div className=\"ask-container\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"chatInput\"\r\n            placeholder=\"Ask InfoNest anything\"\r\n            value={chatInput}\r\n            onChange={handleChatInputChange}\r\n            onKeyPress={handleInputKeyPress}\r\n          />\r\n          <button id=\"sendChatBtn\" onClick={handleSendButtonClick} style={{ padding: '10px 15px', borderRadius: '20px', border: 'none', backgroundColor: '#4CAF50', color: 'white', cursor: 'pointer', marginLeft: '10px' }}>Send</button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}