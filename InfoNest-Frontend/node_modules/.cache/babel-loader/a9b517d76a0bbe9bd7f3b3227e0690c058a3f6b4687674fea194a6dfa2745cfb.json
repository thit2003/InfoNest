{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // For making API calls\nimport '../styles/Home.css';\nimport { BACKEND_API_BASE } from '../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst infonestLogo = '/logo.png';\nconst userAvatar = '/avatar.png';\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate(); // Hook for navigation\n  const [username, setUsername] = useState('User');\n  const [messages, setMessages] = useState([]);\n  const [chatInput, setChatInput] = useState('');\n  const [sidebarHistory, setSidebarHistory] = useState([]);\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    if (!token) {\n      alert('You are not logged in. Please log in first.');\n      navigate('/login');\n      return;\n    }\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n\n    // Fetch history only if messages are not already loaded\n    if (messages.length === 0) {\n      fetchChatHistory(token);\n    }\n  }, [navigate, messages.length]); // Depend on messages.length to re-fetch if needed\n\n  const fetchChatHistory = async token => {\n    try {\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const historyData = response.data.data;\n        const formattedMessages = [];\n        const newSidebarHistory = [];\n        historyData.forEach(entry => {\n          formattedMessages.push({\n            sender: 'user',\n            text: entry.userMessage\n          });\n          formattedMessages.push({\n            sender: 'bot',\n            text: entry.botResponse\n          });\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...');\n        });\n        setMessages(formattedMessages);\n        setSidebarHistory(newSidebarHistory);\n\n        // If no history, start with a greeting from the bot\n        if (formattedMessages.length === 0) {\n          setMessages([{\n            sender: 'bot',\n            text: 'Hello! How can I help you today?'\n          }]);\n        }\n      } else {\n        console.error('Failed to fetch chat history:', response.data.error);\n        alert('Could not load chat history. Please try again.');\n      }\n    } catch (error) {\n      console.error('Network error fetching chat history:', error);\n      if (error.response && error.response.status === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else {\n        alert('Network error. Could not connect to server for history.');\n      }\n    }\n  };\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem('token');\n    if (!token || messageText.trim() === '') return;\n    const userMessage = {\n      sender: 'user',\n      text: messageText\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setChatInput('');\n    try {\n      const response = await axios.post(`${BACKEND_API_BASE}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.botResponse;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: botResponse\n        }]);\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\n      } else {\n        const errorData = response.data;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: `Error: ${errorData.error || 'Failed to get bot response.'}`\n        }]);\n      }\n    } catch (error) {\n      console.error('Network error sending message:', error);\n      let errorMessage = 'Network error. Could not connect to chatbot.';\n      if (error.response && error.response.status === 401) {\n        errorMessage = 'Session expired. Please log in again.';\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else if (error.response && error.response.data && error.response.data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: errorMessage\n      }]);\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]); // Clear all current messages\n    setMessages([{\n      sender: 'bot',\n      text: 'Hello! How can I help you today?'\n    }]);\n  };\n  const handleChatInputChange = e => {\n    setChatInput(e.target.value);\n  };\n  const handleSendButtonClick = () => {\n    sendMessage(chatInput);\n  };\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage(chatInput);\n    }\n  };\n  const handleQuickQuestionClick = e => {\n    sendMessage(e.target.textContent);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    navigate('/login');\n  };\n\n  // NEW: toggle mobile sidebar\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen(prev => !prev);\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\n  useEffect(() => {\n    const messagesContainer = document.querySelector('.chat-messages-container');\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-header\",\n      onClick: toggleMobileSidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: infonestLogo,\n        alt: \"InfoNest Logo\",\n        className: \"circle-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InfoNest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), isMobileSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-backdrop\",\n      onClick: closeMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${isMobileSidebarOpen ? 'no-scroll' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: `sidebar ${isMobileSidebarOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-sidebar-btn\",\n          onClick: closeMobileSidebar,\n          \"aria-label\": \"Close sidebar\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-section desktop-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: infonestLogo,\n            alt: \"InfoNest Logo\",\n            className: \"circle-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"InfoNest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: handleNewChat,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5v14M5 12h14\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), \"New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recent-title\",\n          children: \"RECENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"recent-list\",\n          children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Log-Out-Btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 14 14\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5 2h5v10H5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7 7H1m0 0 2-2m-2 2 2 2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        onClick: isMobileSidebarOpen ? closeMobileSidebar : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: msg.sender === 'user' ? 'user-message' : 'bot-message',\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"chatInput\",\n            placeholder: \"Ask InfoNest anything\",\n            value: chatInput,\n            onChange: handleChatInputChange,\n            onKeyPress: handleInputKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sendChatBtn\",\n            onClick: handleSendButtonClick,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"yUCnAbNkxMOl/AlVSS33JYhF3nA=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","BACKEND_API_BASE","jsxDEV","_jsxDEV","Fragment","_Fragment","infonestLogo","userAvatar","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","isMobileSidebarOpen","setIsMobileSidebarOpen","token","localStorage","getItem","storedUsername","alert","length","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","substring","console","error","removeItem","sendMessage","messageText","trim","prevMessages","post","message","prevSidebar","errorData","errorMessage","handleNewChat","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleQuickQuestionClick","textContent","handleLogout","toggleMobileSidebar","prev","closeMobileSidebar","messagesContainer","document","querySelector","scrollTop","scrollHeight","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","width","height","viewBox","fill","stroke","d","strokeWidth","strokeLinecap","map","index","strokeLinejoin","undefined","msg","type","id","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // For making API calls\r\nimport '../styles/Home.css';\r\nimport { BACKEND_API_BASE } from '../config';\r\n\r\nconst infonestLogo = '/logo.png';\r\nconst userAvatar = '/avatar.png';\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate(); // Hook for navigation\r\n  const [username, setUsername] = useState('User');\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [sidebarHistory, setSidebarHistory] = useState([]);\r\n\r\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUsername = localStorage.getItem('username');\r\n\r\n    if (!token) {\r\n      alert('You are not logged in. Please log in first.');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    }\r\n\r\n    // Fetch history only if messages are not already loaded\r\n    if (messages.length === 0) {\r\n      fetchChatHistory(token);\r\n    }\r\n  }, [navigate, messages.length]); // Depend on messages.length to re-fetch if needed\r\n\r\n  const fetchChatHistory = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const historyData = response.data.data;\r\n        const formattedMessages = [];\r\n        const newSidebarHistory = [];\r\n\r\n        historyData.forEach(entry => {\r\n          formattedMessages.push({ sender: 'user', text: entry.userMessage });\r\n          formattedMessages.push({ sender: 'bot', text: entry.botResponse });\r\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...');\r\n        });\r\n\r\n        setMessages(formattedMessages);\r\n        setSidebarHistory(newSidebarHistory);\r\n\r\n        // If no history, start with a greeting from the bot\r\n        if (formattedMessages.length === 0) {\r\n          setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch chat history:', response.data.error);\r\n        alert('Could not load chat history. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error fetching chat history:', error);\r\n      if (error.response && error.response.status === 401) {\r\n        alert('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        navigate('/login');\r\n      } else {\r\n        alert('Network error. Could not connect to server for history.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token || messageText.trim() === '') return;\r\n\r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    setChatInput('');\r\n\r\n    try {\r\n      const response = await axios.post(`${BACKEND_API_BASE}/chat`,\r\n        { message: messageText },\r\n        { headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const botResponse = response.data.botResponse;\r\n        setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: botResponse }]);\r\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: `Error: ${errorData.error || 'Failed to get bot response.'}` }]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error sending message:', error);\r\n      let errorMessage = 'Network error. Could not connect to chatbot.';\r\n      if (error.response && error.response.status === 401) {\r\n         errorMessage = 'Session expired. Please log in again.';\r\n         localStorage.removeItem('token');\r\n         localStorage.removeItem('username');\r\n         navigate('/login');\r\n      } else if (error.response && error.response.data && error.response.data.error) {\r\n         errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: errorMessage }]);\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([]); // Clear all current messages\r\n    setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n  };\r\n\r\n  const handleChatInputChange = (e) => {\r\n    setChatInput(e.target.value);\r\n  };\r\n\r\n  const handleSendButtonClick = () => {\r\n    sendMessage(chatInput);\r\n  };\r\n\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage(chatInput);\r\n    }\r\n  };\r\n\r\n  const handleQuickQuestionClick = (e) => {\r\n    sendMessage(e.target.textContent);\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('username');\r\n\r\n  navigate('/login');\r\n};\r\n\r\n  // NEW: toggle mobile sidebar\r\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen(prev => !prev);\r\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\r\n\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector('.chat-messages-container');\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile top bar (hidden on desktop via CSS) */}\r\n      <div className=\"mobile-header\" onClick={toggleMobileSidebar}>\r\n        <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n        <h1>InfoNest</h1>\r\n      </div>\r\n\r\n      {/* Backdrop when sidebar open on mobile */}\r\n      {isMobileSidebarOpen && <div className=\"sidebar-backdrop\" onClick={closeMobileSidebar} />}\r\n\r\n      <div className={`container ${isMobileSidebarOpen ? 'no-scroll' : ''}`}>\r\n        <aside className={`sidebar ${isMobileSidebarOpen ? 'open' : ''}`}>\r\n          {/* Close button visible only on mobile */}\r\n            <button className=\"close-sidebar-btn\" onClick={closeMobileSidebar} aria-label=\"Close sidebar\">\r\n              \r\n              ×\r\n            </button>\r\n\r\n          <div className=\"logo-section desktop-only\">\r\n            <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n            <h1>InfoNest</h1>\r\n          </div>\r\n\r\n          <button className=\"new-chat-btn\" onClick={handleNewChat}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M12 5v14M5 12h14\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n            </svg>\r\n            New Chat\r\n          </button>\r\n\r\n          <p className=\"recent-title\">RECENT</p>\r\n          <ul className=\"recent-list\">\r\n            {sidebarHistory.map((entry, index) => (\r\n              <li key={index}>{entry}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button className=\"Log-Out-Btn\" onClick={handleLogout}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 14 14\">\r\n              <path d=\"M5 2h5v10H5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.2\" />\r\n              <path d=\"M7 7H1m0 0 2-2m-2 2 2 2\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            </svg>\r\n            Logout\r\n          </button>\r\n        </aside>\r\n\r\n        <main className=\"main-content\" onClick={isMobileSidebarOpen ? closeMobileSidebar : undefined}>\r\n          <div className=\"chat-messages-container\">\r\n            <ul>\r\n              {messages.map((msg, index) => (\r\n                <li\r\n                  key={index}\r\n                  className={msg.sender === 'user' ? 'user-message' : 'bot-message'}\r\n                >\r\n                  {msg.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"ask-container\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"chatInput\"\r\n              placeholder=\"Ask InfoNest anything\"\r\n              value={chatInput}\r\n              onChange={handleChatInputChange}\r\n              onKeyPress={handleInputKeyPress}\r\n            />\r\n            <button id=\"sendChatBtn\" onClick={handleSendButtonClick}>Send</button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}