{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Home.css\";\nimport { BACKEND_API_BASE } from \"../config\";\nimport TypingIndicator from '../components/TypingIndicator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst infonestLogo = \"/logo.png\";\nconst userAvatar = \"/avatar.png\";\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"User\");\n  const [messages, setMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [sidebarHistory, setSidebarHistory] = useState([]);\n  const [isBotThinking, setIsBotThinking] = useState(false);\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    if (username !== currentUser) {\n      setCurrentUser(username);\n      setMessages([]);\n      setSidebarHistory([]);\n      fetchChatHistory(token);\n    }\n  }, [navigate, currentUser]);\n  const fetchChatHistory = async token => {\n    try {\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const historyData = response.data.data;\n        const formattedMessages = [];\n        const newSidebarHistory = [];\n        historyData.forEach(entry => {\n          formattedMessages.push({\n            sender: \"user\",\n            text: entry.userMessage\n          });\n          formattedMessages.push({\n            sender: \"bot\",\n            text: entry.botResponse && entry.botResponse.trim().length > 0 ? entry.botResponse : \"[No stored response]\"\n          });\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + \"...\");\n        });\n        setMessages(formattedMessages);\n        setSidebarHistory(newSidebarHistory);\n        if (formattedMessages.length === 0) {\n          setMessages([{\n            sender: \"bot\",\n            text: \"Hello! How can I help you today?\"\n          }]);\n        }\n      } else {\n        console.error(\"Failed to fetch chat history:\", response.data.error);\n        alert(\"Could not load chat history. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Network error fetching chat history:\", error);\n      if (error.response && error.response.status === 401) {\n        alert(\"Session expired. Please log in again.\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        navigate(\"/login\");\n      } else {\n        alert(\"Network error. Could not connect to server for history.\");\n      }\n    }\n  };\n  const extractBotResponse = raw => {\n    var _ref, _ref2, _ref3, _ref4, _raw$botResponse, _raw$data, _raw$data2, _raw$data3, _raw$data3$data, _raw$data4, _raw$data4$data;\n    // Try multiple shapes to be robust against backend changes\n    let candidate = (_ref = (_ref2 = (_ref3 = (_ref4 = (_raw$botResponse = raw === null || raw === void 0 ? void 0 : raw.botResponse) !== null && _raw$botResponse !== void 0 ? _raw$botResponse : raw === null || raw === void 0 ? void 0 : raw.response) !== null && _ref4 !== void 0 ? _ref4 : raw === null || raw === void 0 ? void 0 : (_raw$data = raw.data) === null || _raw$data === void 0 ? void 0 : _raw$data.botResponse) !== null && _ref3 !== void 0 ? _ref3 : raw === null || raw === void 0 ? void 0 : (_raw$data2 = raw.data) === null || _raw$data2 === void 0 ? void 0 : _raw$data2.response) !== null && _ref2 !== void 0 ? _ref2 : raw === null || raw === void 0 ? void 0 : (_raw$data3 = raw.data) === null || _raw$data3 === void 0 ? void 0 : (_raw$data3$data = _raw$data3.data) === null || _raw$data3$data === void 0 ? void 0 : _raw$data3$data.botResponse) !== null && _ref !== void 0 ? _ref : raw === null || raw === void 0 ? void 0 : (_raw$data4 = raw.data) === null || _raw$data4 === void 0 ? void 0 : (_raw$data4$data = _raw$data4.data) === null || _raw$data4$data === void 0 ? void 0 : _raw$data4$data.response;\n    if (typeof candidate === \"string\") {\n      const trimmed = candidate.trim();\n      if (trimmed.length > 0) return trimmed;\n    }\n    return null;\n  };\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem(\"token\");\n    if (!token || messageText.trim() === \"\") return;\n    if (isBotThinking) return;\n    const userMessage = {\n      sender: \"user\",\n      text: messageText\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setChatInput(\"\");\n    setIsBotThinking(true);\n    try {\n      const response = await axios.post(`${BACKEND_API_BASE}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"DEBUG /chat raw response:\", response.data);\n      if (response.status === 200) {\n        // Original backend shape: { userMessage, botResponse, historyId }\n        // New/refactored shape possibility: { success:true, data:{ response: \"...\", ... } }\n        let botResponse = extractBotResponse(response.data);\n\n        // Defensive fallback: if still null/empty\n        if (!botResponse) {\n          console.warn(\"Bot response was empty or undefined. Inserting placeholder.\");\n          botResponse = \"[No answer returned]\";\n        }\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"bot\",\n          text: botResponse\n        }]);\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + \"...\"]);\n      } else {\n        const errorData = response.data;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"bot\",\n          text: `Error: ${errorData.error || \"Failed to get bot response.\"}`\n        }]);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Network error sending message:\", error);\n      let errorMessage = \"Network error. Could not connect to chatbot.\";\n      if (error.response && error.response.status === 401) {\n        errorMessage = \"Session expired. Please log in again.\";\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        navigate(\"/login\");\n      } else if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: errorMessage\n      }]);\n    } finally {\n      setIsBotThinking(false);\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([{\n      sender: \"bot\",\n      text: \"Hello! How can I help you today?\"\n    }]);\n  };\n  const handleChatInputChange = e => setChatInput(e.target.value);\n  const handleSendButtonClick = () => sendMessage(chatInput);\n  const handleInputKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage(chatInput);\n  };\n  const handleQuickQuestionClick = e => sendMessage(e.target.textContent);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    setMessages([]);\n    setSidebarHistory([]);\n    navigate(\"/login\");\n  };\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen(prev => !prev);\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\n  useEffect(() => {\n    const messagesContainer = document.querySelector(\".chat-messages-container\");\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-header\",\n      onClick: toggleMobileSidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: infonestLogo,\n        alt: \"InfoNest Logo\",\n        className: \"circle-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InfoNest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), isMobileSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-backdrop\",\n      onClick: closeMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${isMobileSidebarOpen ? \"no-scroll\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: `sidebar ${isMobileSidebarOpen ? \"open\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-sidebar-btn\",\n          onClick: closeMobileSidebar,\n          \"aria-label\": \"Close sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"32\",\n            height: \"32\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"m12 13.4l2.9 2.9q.275.275.7.275t.7-.275t.275-.7t-.275-.7L13.4 12l2.9-2.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275L12 10.6L9.1 7.7q-.275-.275-.7-.275t-.7.275t-.275.7t.275.7l2.9 2.9l-2.9 2.9q-.275.275-.275.7t.275.7t.7.275t.7-.275zm0 8.6q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-section desktop-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: infonestLogo,\n            alt: \"InfoNest Logo\",\n            className: \"circle-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"InfoNest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: handleNewChat,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5v14M5 12h14\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), \"New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recent-title\",\n          children: \"RECENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"recent-list\",\n          children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Log-Out-Btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 14 14\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5 2h5v10H5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7 7H1m0 0 2-2m-2 2 2 2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        onClick: isMobileSidebarOpen ? closeMobileSidebar : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: msg.sender === \"user\" ? \"user-message\" : \"bot-message\",\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n            visible: isBotThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"chatInput\",\n            placeholder: \"Ask InfoNest anything\",\n            value: chatInput,\n            onChange: handleChatInputChange,\n            onKeyPress: handleInputKeyPress,\n            disabled: isBotThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sendChatBtn\",\n            onClick: handleSendButtonClick,\n            disabled: isBotThinking || chatInput.trim() === '',\n            children: isBotThinking ? '...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"ZSfyTFS3Mz+MRTuiBxZiVONDyOg=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","BACKEND_API_BASE","TypingIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","infonestLogo","userAvatar","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","isBotThinking","setIsBotThinking","isMobileSidebarOpen","setIsMobileSidebarOpen","currentUser","setCurrentUser","token","localStorage","getItem","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","trim","length","substring","console","error","alert","removeItem","extractBotResponse","raw","_ref","_ref2","_ref3","_ref4","_raw$botResponse","_raw$data","_raw$data2","_raw$data3","_raw$data3$data","_raw$data4","_raw$data4$data","candidate","trimmed","sendMessage","messageText","prevMessages","post","message","log","warn","prevSidebar","errorData","_error$response","_error$response$data","errorMessage","handleNewChat","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleQuickQuestionClick","textContent","handleLogout","toggleMobileSidebar","prev","closeMobileSidebar","messagesContainer","document","querySelector","scrollTop","scrollHeight","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","map","index","strokeLinejoin","undefined","msg","visible","type","id","placeholder","onChange","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Home.css\";\r\nimport { BACKEND_API_BASE } from \"../config\";\r\nimport TypingIndicator from '../components/TypingIndicator';\r\n\r\nconst infonestLogo = \"/logo.png\";\r\nconst userAvatar = \"/avatar.png\";\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"User\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState(\"\");\r\n  const [sidebarHistory, setSidebarHistory] = useState([]);\r\n  const [isBotThinking, setIsBotThinking] = useState(false);\r\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const username = localStorage.getItem(\"username\");\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    if (username !== currentUser) {\r\n      setCurrentUser(username);\r\n      setMessages([]);\r\n      setSidebarHistory([]);\r\n      fetchChatHistory(token);\r\n    }\r\n  }, [navigate, currentUser]);\r\n\r\n  const fetchChatHistory = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const historyData = response.data.data;\r\n        const formattedMessages = [];\r\n        const newSidebarHistory = [];\r\n\r\n        historyData.forEach((entry) => {\r\n          formattedMessages.push({ sender: \"user\", text: entry.userMessage });\r\n            formattedMessages.push({\r\n              sender: \"bot\",\r\n              text: (entry.botResponse && entry.botResponse.trim().length > 0)\r\n                ? entry.botResponse\r\n                : \"[No stored response]\"\r\n            });\r\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + \"...\");\r\n        });\r\n\r\n        setMessages(formattedMessages);\r\n        setSidebarHistory(newSidebarHistory);\r\n\r\n        if (formattedMessages.length === 0) {\r\n          setMessages([{ sender: \"bot\", text: \"Hello! How can I help you today?\" }]);\r\n        }\r\n      } else {\r\n        console.error(\"Failed to fetch chat history:\", response.data.error);\r\n        alert(\"Could not load chat history. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Network error fetching chat history:\", error);\r\n      if (error.response && error.response.status === 401) {\r\n        alert(\"Session expired. Please log in again.\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        alert(\"Network error. Could not connect to server for history.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const extractBotResponse = (raw) => {\r\n    // Try multiple shapes to be robust against backend changes\r\n    let candidate =\r\n      raw?.botResponse ??\r\n      raw?.response ??\r\n      raw?.data?.botResponse ??\r\n      raw?.data?.response ??\r\n      raw?.data?.data?.botResponse ??\r\n      raw?.data?.data?.response;\r\n\r\n    if (typeof candidate === \"string\") {\r\n      const trimmed = candidate.trim();\r\n      if (trimmed.length > 0) return trimmed;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token || messageText.trim() === \"\") return;\r\n    if (isBotThinking) return;\r\n\r\n    const userMessage = { sender: \"user\", text: messageText };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n    setChatInput(\"\");\r\n    setIsBotThinking(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${BACKEND_API_BASE}/chat`,\r\n        { message: messageText },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"DEBUG /chat raw response:\", response.data);\r\n\r\n      if (response.status === 200) {\r\n        // Original backend shape: { userMessage, botResponse, historyId }\r\n        // New/refactored shape possibility: { success:true, data:{ response: \"...\", ... } }\r\n        let botResponse = extractBotResponse(response.data);\r\n\r\n        // Defensive fallback: if still null/empty\r\n        if (!botResponse) {\r\n          console.warn(\"Bot response was empty or undefined. Inserting placeholder.\");\r\n          botResponse = \"[No answer returned]\";\r\n        }\r\n\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { sender: \"bot\", text: botResponse },\r\n        ]);\r\n        setSidebarHistory((prevSidebar) => [\r\n          ...prevSidebar,\r\n          messageText.substring(0, 25) + \"...\",\r\n        ]);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          {\r\n            sender: \"bot\",\r\n            text: `Error: ${errorData.error || \"Failed to get bot response.\"}`,\r\n          },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Network error sending message:\", error);\r\n      let errorMessage = \"Network error. Could not connect to chatbot.\";\r\n      if (error.response && error.response.status === 401) {\r\n        errorMessage = \"Session expired. Please log in again.\";\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        navigate(\"/login\");\r\n      } else if (error.response?.data?.error) {\r\n        errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { sender: \"bot\", text: errorMessage },\r\n      ]);\r\n    } finally {\r\n      setIsBotThinking(false);\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([{ sender: \"bot\", text: \"Hello! How can I help you today?\" }]);\r\n  };\r\n\r\n  const handleChatInputChange = (e) => setChatInput(e.target.value);\r\n  const handleSendButtonClick = () => sendMessage(chatInput);\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage(chatInput);\r\n  };\r\n  const handleQuickQuestionClick = (e) => sendMessage(e.target.textContent);\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n    setMessages([]);\r\n    setSidebarHistory([]);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen((prev) => !prev);\r\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\r\n\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector(\".chat-messages-container\");\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mobile-header\" onClick={toggleMobileSidebar}>\r\n        <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n        <h1>InfoNest</h1>\r\n      </div>\r\n\r\n      {isMobileSidebarOpen && (\r\n        <div className=\"sidebar-backdrop\" onClick={closeMobileSidebar} />\r\n      )}\r\n\r\n      <div className={`container ${isMobileSidebarOpen ? \"no-scroll\" : \"\"}`}>\r\n        <aside className={`sidebar ${isMobileSidebarOpen ? \"open\" : \"\"}`}>\r\n          <button\r\n            className=\"close-sidebar-btn\"\r\n            onClick={closeMobileSidebar}\r\n            aria-label=\"Close sidebar\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"m12 13.4l2.9 2.9q.275.275.7.275t.7-.275t.275-.7t-.275-.7L13.4 12l2.9-2.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275L12 10.6L9.1 7.7q-.275-.275-.7-.275t-.7.275t-.275.7t.275.7l2.9 2.9l-2.9 2.9q-.275.275-.275.7t.275.7t.7.275t.7-.275zm0 8.6q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          <div className=\"logo-section desktop-only\">\r\n            <img\r\n              src={infonestLogo}\r\n              alt=\"InfoNest Logo\"\r\n              className=\"circle-logo\"\r\n            />\r\n            <h1>InfoNest</h1>\r\n          </div>\r\n\r\n            <button className=\"new-chat-btn\" onClick={handleNewChat}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"22\"\r\n                height=\"22\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path d=\"M12 5v14M5 12h14\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n              </svg>\r\n              New Chat\r\n            </button>\r\n\r\n          <p className=\"recent-title\">RECENT</p>\r\n          <ul className=\"recent-list\">\r\n            {sidebarHistory.map((entry, index) => (\r\n              <li key={index}>{entry}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button className=\"Log-Out-Btn\" onClick={handleLogout}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"22\"\r\n              height=\"22\"\r\n              viewBox=\"0 0 14 14\"\r\n            >\r\n              <path\r\n                d=\"M5 2h5v10H5\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"1.2\"\r\n              />\r\n              <path\r\n                d=\"M7 7H1m0 0 2-2m-2 2 2 2\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n            Logout\r\n          </button>\r\n        </aside>\r\n\r\n        <main\r\n          className=\"main-content\"\r\n          onClick={isMobileSidebarOpen ? closeMobileSidebar : undefined}\r\n        >\r\n          <div className=\"chat-messages-container\">\r\n            <ul>\r\n              {messages.map((msg, index) => (\r\n                <li\r\n                  key={index}\r\n                  className={msg.sender === \"user\" ? \"user-message\" : \"bot-message\"}\r\n                >\r\n                  {msg.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <TypingIndicator visible={isBotThinking} />\r\n          </div>\r\n\r\n          <div className=\"ask-container\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"chatInput\"\r\n              placeholder=\"Ask InfoNest anything\"\r\n              value={chatInput}\r\n              onChange={handleChatInputChange}\r\n              onKeyPress={handleInputKeyPress}\r\n              disabled={isBotThinking}\r\n            />\r\n            <button\r\n              id=\"sendChatBtn\"\r\n              onClick={handleSendButtonClick}\r\n              disabled={isBotThinking || chatInput.trim() === ''}\r\n            >\r\n              {isBotThinking ? '...' : 'Send'}\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}