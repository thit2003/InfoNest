{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// HomePage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/Home.css';\nimport { BACKEND_API_BASE } from '../config';\nimport TypingIndicator from '../components/TypingIndicator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst infonestLogo = '/logo.png';\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('User');\n  const [messages, setMessages] = useState([]);\n  const [chatInput, setChatInput] = useState('');\n  const [sidebarHistory, setSidebarHistory] = useState([]);\n\n  // Mobile sidebar state\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n\n  // Typing indicator state\n  const [isBotThinking, setIsBotThinking] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    if (!token) {\n      alert('You are not logged in. Please log in first.');\n      navigate('/login');\n      return;\n    }\n    if (storedUsername) setUsername(storedUsername);\n    if (messages.length === 0) {\n      fetchChatHistory(token);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navigate, messages.length]);\n  const fetchChatHistory = async token => {\n    try {\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const historyData = response.data.data;\n        const formattedMessages = [];\n        const newSidebarHistory = [];\n        historyData.forEach(entry => {\n          formattedMessages.push({\n            sender: 'user',\n            text: entry.userMessage\n          });\n          formattedMessages.push({\n            sender: 'bot',\n            text: entry.botResponse\n          });\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...');\n        });\n        setMessages(formattedMessages);\n        setSidebarHistory(newSidebarHistory);\n        if (formattedMessages.length === 0) {\n          setMessages([{\n            sender: 'bot',\n            text: 'Hello! How can I help you today?'\n          }]);\n        }\n      } else {\n        console.error('Failed to fetch chat history:', response.data.error);\n        alert('Could not load chat history. Please try again.');\n      }\n    } catch (error) {\n      console.error('Network error fetching chat history:', error);\n      if (error.response && error.response.status === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else {\n        alert('Network error. Could not connect to server for history.');\n      }\n    }\n  };\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem('token');\n    if (!token || messageText.trim() === '') return;\n    const userMessage = {\n      sender: 'user',\n      text: messageText\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setChatInput('');\n    setIsBotThinking(true); // show typing indicator\n\n    try {\n      const response = await axios.post(`${BACKEND_API_BASE}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.botResponse;\n        setMessages(prev => [...prev, {\n          sender: 'bot',\n          text: botResponse\n        }]);\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\n      } else {\n        const errorData = response.data;\n        setMessages(prev => [...prev, {\n          sender: 'bot',\n          text: `Error: ${errorData.error || 'Failed to get bot response.'}`\n        }]);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Network error sending message:', error);\n      let errorMessage = 'Network error. Could not connect to chatbot.';\n      if (error.response && error.response.status === 401) {\n        errorMessage = 'Session expired. Please log in again.';\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prev => [...prev, {\n        sender: 'bot',\n        text: errorMessage\n      }]);\n    } finally {\n      setIsBotThinking(false); // hide typing indicator\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([{\n      sender: 'bot',\n      text: 'Hello! How can I help you today?'\n    }]);\n  };\n  const handleChatInputChange = e => setChatInput(e.target.value);\n  const handleSendButtonClick = () => sendMessage(chatInput);\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter' && !isBotThinking) sendMessage(chatInput);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    navigate('/login');\n  };\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen(prev => !prev);\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\n  useEffect(() => {\n    const messagesContainer = document.querySelector('.chat-messages-container');\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages, isBotThinking]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-header\",\n      children: [!isMobileSidebarOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hamburger-btn\",\n        onClick: toggleMobileSidebar,\n        \"aria-label\": \"Open recent chats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: infonestLogo,\n        alt: \"InfoNest Logo\",\n        className: \"circle-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InfoNest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), isMobileSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-backdrop\",\n      onClick: closeMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${isMobileSidebarOpen ? 'no-scroll' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: `sidebar ${isMobileSidebarOpen ? 'open' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-brand\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: infonestLogo,\n              alt: \"InfoNest Logo\",\n              className: \"circle-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"InfoNest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-sidebar-btn\",\n            onClick: closeMobileSidebar,\n            \"aria-label\": \"Close sidebar\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: handleNewChat,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5v14M5 12h14\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), \"New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recent-title\",\n          children: \"RECENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"recent-list\",\n          children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Log-Out-Btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 14 14\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5 2h5v10H5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7 7H1m0 0 2-2m-2 2 2 2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        onClick: isMobileSidebarOpen ? closeMobileSidebar : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: msg.sender === 'user' ? 'user-message' : 'bot-message',\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n            visible: isBotThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"chatInput\",\n            placeholder: \"Ask InfoNest anything\",\n            value: chatInput,\n            onChange: handleChatInputChange,\n            onKeyPress: handleInputKeyPress,\n            disabled: isBotThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sendChatBtn\",\n            onClick: handleSendButtonClick,\n            disabled: isBotThinking || chatInput.trim() === '',\n            children: isBotThinking ? '...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"gE93jEp1Ddo7PzQc1sdFMg51Cpo=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","BACKEND_API_BASE","TypingIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","infonestLogo","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","isMobileSidebarOpen","setIsMobileSidebarOpen","isBotThinking","setIsBotThinking","token","localStorage","getItem","storedUsername","alert","length","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","substring","console","error","removeItem","sendMessage","messageText","trim","prev","post","message","prevSidebar","errorData","_error$response","_error$response$data","errorMessage","handleNewChat","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleLogout","toggleMobileSidebar","closeMobileSidebar","messagesContainer","document","querySelector","scrollTop","scrollHeight","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","xmlns","width","height","viewBox","fill","stroke","d","strokeWidth","strokeLinecap","map","index","strokeLinejoin","undefined","msg","visible","type","id","placeholder","onChange","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/pages/HomePage.js"],"sourcesContent":["// HomePage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../styles/Home.css';\r\nimport { BACKEND_API_BASE } from '../config';\r\nimport TypingIndicator from '../components/TypingIndicator';\r\n\r\nconst infonestLogo = '/logo.png';\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('User');\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [sidebarHistory, setSidebarHistory] = useState([]);\r\n\r\n  // Mobile sidebar state\r\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\r\n\r\n  // Typing indicator state\r\n  const [isBotThinking, setIsBotThinking] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUsername = localStorage.getItem('username');\r\n\r\n    if (!token) {\r\n      alert('You are not logged in. Please log in first.');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    if (storedUsername) setUsername(storedUsername);\r\n\r\n    if (messages.length === 0) {\r\n      fetchChatHistory(token);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [navigate, messages.length]);\r\n\r\n  const fetchChatHistory = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const historyData = response.data.data;\r\n        const formattedMessages = [];\r\n        const newSidebarHistory = [];\r\n\r\n        historyData.forEach((entry) => {\r\n          formattedMessages.push({ sender: 'user', text: entry.userMessage });\r\n          formattedMessages.push({ sender: 'bot', text: entry.botResponse });\r\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...');\r\n        });\r\n\r\n        setMessages(formattedMessages);\r\n        setSidebarHistory(newSidebarHistory);\r\n\r\n        if (formattedMessages.length === 0) {\r\n          setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch chat history:', response.data.error);\r\n        alert('Could not load chat history. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error fetching chat history:', error);\r\n      if (error.response && error.response.status === 401) {\r\n        alert('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        navigate('/login');\r\n      } else {\r\n        alert('Network error. Could not connect to server for history.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token || messageText.trim() === '') return;\r\n\r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setChatInput('');\r\n    setIsBotThinking(true); // show typing indicator\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${BACKEND_API_BASE}/chat`,\r\n        { message: messageText },\r\n        { headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const botResponse = response.data.botResponse;\r\n        setMessages((prev) => [...prev, { sender: 'bot', text: botResponse }]);\r\n        setSidebarHistory((prevSidebar) => [\r\n          ...prevSidebar,\r\n          messageText.substring(0, 25) + '...',\r\n        ]);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { sender: 'bot', text: `Error: ${errorData.error || 'Failed to get bot response.'}` },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error sending message:', error);\r\n      let errorMessage = 'Network error. Could not connect to chatbot.';\r\n      if (error.response && error.response.status === 401) {\r\n        errorMessage = 'Session expired. Please log in again.';\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        navigate('/login');\r\n      } else if (error.response?.data?.error) {\r\n        errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prev) => [...prev, { sender: 'bot', text: errorMessage }]);\r\n    } finally {\r\n      setIsBotThinking(false); // hide typing indicator\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n  };\r\n\r\n  const handleChatInputChange = (e) => setChatInput(e.target.value);\r\n  const handleSendButtonClick = () => sendMessage(chatInput);\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !isBotThinking) sendMessage(chatInput);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    navigate('/login');\r\n  };\r\n\r\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen((prev) => !prev);\r\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\r\n\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector('.chat-messages-container');\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages, isBotThinking]);\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile header: hamburger on the left, logo + name centered */}\r\n      <div className=\"mobile-header\">\r\n        {!isMobileSidebarOpen && (\r\n          <button\r\n            className=\"hamburger-btn\"\r\n            onClick={toggleMobileSidebar}\r\n            aria-label=\"Open recent chats\"\r\n          >\r\n            <span />\r\n            <span />\r\n            <span />\r\n          </button>\r\n        )}\r\n        <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n        <h1>InfoNest</h1>\r\n      </div>\r\n\r\n      {/* Backdrop when sidebar open on mobile */}\r\n      {isMobileSidebarOpen && <div className=\"sidebar-backdrop\" onClick={closeMobileSidebar} />}\r\n\r\n      <div className={`container ${isMobileSidebarOpen ? 'no-scroll' : ''}`}>\r\n        <aside className={`sidebar ${isMobileSidebarOpen ? 'open' : ''}`}>\r\n          <div className=\"sidebar-header\">\r\n            <div className=\"sidebar-brand\">\r\n              <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n              <h1>InfoNest</h1>\r\n            </div>\r\n            <button\r\n              className=\"close-sidebar-btn\"\r\n              onClick={closeMobileSidebar}\r\n              aria-label=\"Close sidebar\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n\r\n          <button className=\"new-chat-btn\" onClick={handleNewChat}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M12 5v14M5 12h14\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n            </svg>\r\n            New Chat\r\n          </button>\r\n\r\n          <p className=\"recent-title\">RECENT</p>\r\n          <ul className=\"recent-list\">\r\n            {sidebarHistory.map((entry, index) => (\r\n              <li key={index}>{entry}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button className=\"Log-Out-Btn\" onClick={handleLogout}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 14 14\">\r\n              <path d=\"M5 2h5v10H5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.2\" />\r\n              <path d=\"M7 7H1m0 0 2-2m-2 2 2 2\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            </svg>\r\n            Logout\r\n          </button>\r\n        </aside>\r\n\r\n        <main\r\n          className=\"main-content\"\r\n          onClick={isMobileSidebarOpen ? closeMobileSidebar : undefined}\r\n        >\r\n          <div className=\"chat-messages-container\">\r\n            <ul>\r\n              {messages.map((msg, index) => (\r\n                <li\r\n                  key={index}\r\n                  className={msg.sender === 'user' ? 'user-message' : 'bot-message'}\r\n                >\r\n                  {msg.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {/* InfoNest is thinking indicator */}\r\n            <TypingIndicator visible={isBotThinking} />\r\n          </div>\r\n\r\n          <div className=\"ask-container\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"chatInput\"\r\n              placeholder=\"Ask InfoNest anything\"\r\n              value={chatInput}\r\n              onChange={handleChatInputChange}\r\n              onKeyPress={handleInputKeyPress}\r\n              disabled={isBotThinking}\r\n            />\r\n            <button\r\n              id=\"sendChatBtn\"\r\n              onClick={handleSendButtonClick}\r\n              disabled={isBotThinking || chatInput.trim() === ''}\r\n            >\r\n              {isBotThinking ? '...' : 'Send'}\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}