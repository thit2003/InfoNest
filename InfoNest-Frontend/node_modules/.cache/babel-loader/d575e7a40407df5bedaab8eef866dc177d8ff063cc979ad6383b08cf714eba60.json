{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // For making API calls\nimport \"../styles/Home.css\";\nimport { BACKEND_API_BASE } from \"../config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst infonestLogo = \"/logo.png\";\nconst userAvatar = \"/avatar.png\";\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate(); // Hook for navigation\n  const [username, setUsername] = useState(\"User\");\n  const [messages, setMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [sidebarHistory, setSidebarHistory] = useState([]);\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const username = localStorage.getItem(\"username\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    if (username !== currentUser) {\n      setCurrentUser(username);\n      setMessages([]); // optional clear\n      setSidebarHistory([]);\n      fetchChatHistory(token);\n    }\n  }, [navigate, currentUser]);\n  const fetchChatHistory = async token => {\n    try {\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const historyData = response.data.data;\n        const formattedMessages = [];\n        const newSidebarHistory = [];\n        historyData.forEach(entry => {\n          formattedMessages.push({\n            sender: \"user\",\n            text: entry.userMessage\n          });\n          formattedMessages.push({\n            sender: \"bot\",\n            text: entry.botResponse\n          });\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + \"...\");\n        });\n        setMessages(formattedMessages);\n        setSidebarHistory(newSidebarHistory);\n\n        // If no history, start with a greeting from the bot\n        if (formattedMessages.length === 0) {\n          setMessages([{\n            sender: \"bot\",\n            text: \"Hello! How can I help you today?\"\n          }]);\n        }\n      } else {\n        console.error(\"Failed to fetch chat history:\", response.data.error);\n        alert(\"Could not load chat history. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Network error fetching chat history:\", error);\n      if (error.response && error.response.status === 401) {\n        alert(\"Session expired. Please log in again.\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        navigate(\"/login\");\n      } else {\n        alert(\"Network error. Could not connect to server for history.\");\n      }\n    }\n  };\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem(\"token\");\n    if (!token || messageText.trim() === \"\") return;\n    const userMessage = {\n      sender: \"user\",\n      text: messageText\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setChatInput(\"\");\n    try {\n      const response = await axios.post(`${BACKEND_API_BASE}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.botResponse;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"bot\",\n          text: botResponse\n        }]);\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + \"...\"]);\n      } else {\n        const errorData = response.data;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"bot\",\n          text: `Error: ${errorData.error || \"Failed to get bot response.\"}`\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Network error sending message:\", error);\n      let errorMessage = \"Network error. Could not connect to chatbot.\";\n      if (error.response && error.response.status === 401) {\n        errorMessage = \"Session expired. Please log in again.\";\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        navigate(\"/login\");\n      } else if (error.response && error.response.data && error.response.data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"bot\",\n        text: errorMessage\n      }]);\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]); // Clear all current messages\n    setMessages([{\n      sender: \"bot\",\n      text: \"Hello! How can I help you today?\"\n    }]);\n  };\n  const handleChatInputChange = e => {\n    setChatInput(e.target.value);\n  };\n  const handleSendButtonClick = () => {\n    sendMessage(chatInput);\n  };\n  const handleInputKeyPress = e => {\n    if (e.key === \"Enter\") {\n      sendMessage(chatInput);\n    }\n  };\n  const handleQuickQuestionClick = e => {\n    sendMessage(e.target.textContent);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    setMessages([]);\n    setSidebarHistory([]);\n    navigate(\"/login\");\n  };\n\n  // NEW: toggle mobile sidebar\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen(prev => !prev);\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\n  useEffect(() => {\n    const messagesContainer = document.querySelector(\".chat-messages-container\");\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-header\",\n      onClick: toggleMobileSidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: infonestLogo,\n        alt: \"InfoNest Logo\",\n        className: \"circle-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InfoNest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), isMobileSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-backdrop\",\n      onClick: closeMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${isMobileSidebarOpen ? \"no-scroll\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: `sidebar ${isMobileSidebarOpen ? \"open\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-sidebar-btn\",\n          onClick: closeMobileSidebar,\n          \"aria-label\": \"Close sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"32\",\n            height: \"32\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"m12 13.4l2.9 2.9q.275.275.7.275t.7-.275t.275-.7t-.275-.7L13.4 12l2.9-2.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275L12 10.6L9.1 7.7q-.275-.275-.7-.275t-.7.275t-.275.7t.275.7l2.9 2.9l-2.9 2.9q-.275.275-.275.7t.275.7t.7.275t.7-.275zm0 8.6q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-section desktop-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: infonestLogo,\n            alt: \"InfoNest Logo\",\n            className: \"circle-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"InfoNest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: handleNewChat,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5v14M5 12h14\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), \"New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recent-title\",\n          children: \"RECENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"recent-list\",\n          children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Log-Out-Btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 14 14\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5 2h5v10H5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7 7H1m0 0 2-2m-2 2 2 2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        onClick: isMobileSidebarOpen ? closeMobileSidebar : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages-container\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: msg.sender === \"user\" ? \"user-message\" : \"bot-message\",\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"chatInput\",\n            placeholder: \"Ask InfoNest anything\",\n            value: chatInput,\n            onChange: handleChatInputChange,\n            onKeyPress: handleInputKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sendChatBtn\",\n            onClick: handleSendButtonClick,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"XZVRSs9GKPVQ1vyzSJkcovuAYKg=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","BACKEND_API_BASE","jsxDEV","_jsxDEV","Fragment","_Fragment","infonestLogo","userAvatar","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","isMobileSidebarOpen","setIsMobileSidebarOpen","currentUser","setCurrentUser","token","localStorage","getItem","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","substring","length","console","error","alert","removeItem","sendMessage","messageText","trim","prevMessages","post","message","prevSidebar","errorData","errorMessage","handleNewChat","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleQuickQuestionClick","textContent","handleLogout","toggleMobileSidebar","prev","closeMobileSidebar","messagesContainer","document","querySelector","scrollTop","scrollHeight","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","map","index","strokeLinejoin","undefined","msg","type","id","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\"; // For making API calls\r\nimport \"../styles/Home.css\";\r\nimport { BACKEND_API_BASE } from \"../config\";\r\n\r\nconst infonestLogo = \"/logo.png\";\r\nconst userAvatar = \"/avatar.png\";\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate(); // Hook for navigation\r\n  const [username, setUsername] = useState(\"User\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState(\"\");\r\n  const [sidebarHistory, setSidebarHistory] = useState([]);\r\n\r\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const username = localStorage.getItem(\"username\");\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    if (username !== currentUser) {\r\n      setCurrentUser(username);\r\n      setMessages([]); // optional clear\r\n      setSidebarHistory([]);\r\n      fetchChatHistory(token);\r\n    }\r\n  }, [navigate, currentUser]);\r\n\r\n  const fetchChatHistory = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${BACKEND_API_BASE}/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const historyData = response.data.data;\r\n        const formattedMessages = [];\r\n        const newSidebarHistory = [];\r\n\r\n        historyData.forEach((entry) => {\r\n          formattedMessages.push({ sender: \"user\", text: entry.userMessage });\r\n          formattedMessages.push({ sender: \"bot\", text: entry.botResponse });\r\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + \"...\");\r\n        });\r\n\r\n        setMessages(formattedMessages);\r\n        setSidebarHistory(newSidebarHistory);\r\n\r\n        // If no history, start with a greeting from the bot\r\n        if (formattedMessages.length === 0) {\r\n          setMessages([\r\n            { sender: \"bot\", text: \"Hello! How can I help you today?\" },\r\n          ]);\r\n        }\r\n      } else {\r\n        console.error(\"Failed to fetch chat history:\", response.data.error);\r\n        alert(\"Could not load chat history. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Network error fetching chat history:\", error);\r\n      if (error.response && error.response.status === 401) {\r\n        alert(\"Session expired. Please log in again.\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        alert(\"Network error. Could not connect to server for history.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token || messageText.trim() === \"\") return;\r\n\r\n    const userMessage = { sender: \"user\", text: messageText };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    setChatInput(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${BACKEND_API_BASE}/chat`,\r\n        { message: messageText },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const botResponse = response.data.botResponse;\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          { sender: \"bot\", text: botResponse },\r\n        ]);\r\n        setSidebarHistory((prevSidebar) => [\r\n          ...prevSidebar,\r\n          messageText.substring(0, 25) + \"...\",\r\n        ]);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          {\r\n            sender: \"bot\",\r\n            text: `Error: ${errorData.error || \"Failed to get bot response.\"}`,\r\n          },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Network error sending message:\", error);\r\n      let errorMessage = \"Network error. Could not connect to chatbot.\";\r\n      if (error.response && error.response.status === 401) {\r\n        errorMessage = \"Session expired. Please log in again.\";\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        navigate(\"/login\");\r\n      } else if (\r\n        error.response &&\r\n        error.response.data &&\r\n        error.response.data.error\r\n      ) {\r\n        errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { sender: \"bot\", text: errorMessage },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([]); // Clear all current messages\r\n    setMessages([{ sender: \"bot\", text: \"Hello! How can I help you today?\" }]);\r\n  };\r\n\r\n  const handleChatInputChange = (e) => {\r\n    setChatInput(e.target.value);\r\n  };\r\n\r\n  const handleSendButtonClick = () => {\r\n    sendMessage(chatInput);\r\n  };\r\n\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      sendMessage(chatInput);\r\n    }\r\n  };\r\n\r\n  const handleQuickQuestionClick = (e) => {\r\n    sendMessage(e.target.textContent);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n    setMessages([]);\r\n    setSidebarHistory([]);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // NEW: toggle mobile sidebar\r\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen((prev) => !prev);\r\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\r\n\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector(\r\n      \".chat-messages-container\"\r\n    );\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile top bar (hidden on desktop via CSS) */}\r\n      <div className=\"mobile-header\" onClick={toggleMobileSidebar}>\r\n        <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n        <h1>InfoNest</h1>\r\n      </div>\r\n\r\n      {/* Backdrop when sidebar open on mobile */}\r\n      {isMobileSidebarOpen && (\r\n        <div className=\"sidebar-backdrop\" onClick={closeMobileSidebar} />\r\n      )}\r\n\r\n      <div className={`container ${isMobileSidebarOpen ? \"no-scroll\" : \"\"}`}>\r\n        <aside className={`sidebar ${isMobileSidebarOpen ? \"open\" : \"\"}`}>\r\n          {/* Close button visible only on mobile */}\r\n          <button\r\n            className=\"close-sidebar-btn\"\r\n            onClick={closeMobileSidebar}\r\n            aria-label=\"Close sidebar\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"m12 13.4l2.9 2.9q.275.275.7.275t.7-.275t.275-.7t-.275-.7L13.4 12l2.9-2.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275L12 10.6L9.1 7.7q-.275-.275-.7-.275t-.7.275t-.275.7t.275.7l2.9 2.9l-2.9 2.9q-.275.275-.275.7t.275.7t.7.275t.7-.275zm0 8.6q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.213 8.1T22 12t-.788 3.9t-2.137 3.175t-3.175 2.138T12 22\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          <div className=\"logo-section desktop-only\">\r\n            <img\r\n              src={infonestLogo}\r\n              alt=\"InfoNest Logo\"\r\n              className=\"circle-logo\"\r\n            />\r\n            <h1>InfoNest</h1>\r\n          </div>\r\n\r\n          <button className=\"new-chat-btn\" onClick={handleNewChat}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"22\"\r\n              height=\"22\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                d=\"M12 5v14M5 12h14\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n              />\r\n            </svg>\r\n            New Chat\r\n          </button>\r\n\r\n          <p className=\"recent-title\">RECENT</p>\r\n          <ul className=\"recent-list\">\r\n            {sidebarHistory.map((entry, index) => (\r\n              <li key={index}>{entry}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button className=\"Log-Out-Btn\" onClick={handleLogout}>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"22\"\r\n              height=\"22\"\r\n              viewBox=\"0 0 14 14\"\r\n            >\r\n              <path\r\n                d=\"M5 2h5v10H5\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"1.2\"\r\n              />\r\n              <path\r\n                d=\"M7 7H1m0 0 2-2m-2 2 2 2\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                strokeWidth=\"1.2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </svg>\r\n            Logout\r\n          </button>\r\n        </aside>\r\n\r\n        <main\r\n          className=\"main-content\"\r\n          onClick={isMobileSidebarOpen ? closeMobileSidebar : undefined}\r\n        >\r\n          <div className=\"chat-messages-container\">\r\n            <ul>\r\n              {messages.map((msg, index) => (\r\n                <li\r\n                  key={index}\r\n                  className={\r\n                    msg.sender === \"user\" ? \"user-message\" : \"bot-message\"\r\n                  }\r\n                >\r\n                  {msg.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"ask-container\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"chatInput\"\r\n              placeholder=\"Ask InfoNest anything\"\r\n              value={chatInput}\r\n              onChange={handleChatInputChange}\r\n              onKeyPress={handleInputKeyPress}\r\n            />\r\n            <button id=\"sendChatBtn\" onClick={handleSendButtonClick}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAO,oBAAoB;AAC3B,SAASC,gBAAgB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,YAAY,GAAG,WAAW;AAChC,MAAMC,UAAU,GAAG,aAAa;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC;EAChD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM,CAACsB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACpDC,SAAS,CAAC,MAAM;IACd,MAAMyB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMd,QAAQ,GAAGa,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAACF,KAAK,EAAE;MACVb,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IACA,IAAIC,QAAQ,KAAKU,WAAW,EAAE;MAC5BC,cAAc,CAACX,QAAQ,CAAC;MACxBG,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjBI,iBAAiB,CAAC,EAAE,CAAC;MACrBQ,gBAAgB,CAACH,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACb,QAAQ,EAAEW,WAAW,CAAC,CAAC;EAE3B,MAAMK,gBAAgB,GAAG,MAAOH,KAAK,IAAK;IACxC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,GAAG3B,gBAAgB,UAAU,EAAE;QAC9D4B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUP,KAAK;QAAG;MAC9C,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMC,WAAW,GAAGL,QAAQ,CAACM,IAAI,CAACA,IAAI;QACtC,MAAMC,iBAAiB,GAAG,EAAE;QAC5B,MAAMC,iBAAiB,GAAG,EAAE;QAE5BH,WAAW,CAACI,OAAO,CAAEC,KAAK,IAAK;UAC7BH,iBAAiB,CAACI,IAAI,CAAC;YAAEC,MAAM,EAAE,MAAM;YAAEC,IAAI,EAAEH,KAAK,CAACI;UAAY,CAAC,CAAC;UACnEP,iBAAiB,CAACI,IAAI,CAAC;YAAEC,MAAM,EAAE,KAAK;YAAEC,IAAI,EAAEH,KAAK,CAACK;UAAY,CAAC,CAAC;UAClEP,iBAAiB,CAACG,IAAI,CAACD,KAAK,CAACI,WAAW,CAACE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,CAAC;QAEF7B,WAAW,CAACoB,iBAAiB,CAAC;QAC9BhB,iBAAiB,CAACiB,iBAAiB,CAAC;;QAEpC;QACA,IAAID,iBAAiB,CAACU,MAAM,KAAK,CAAC,EAAE;UAClC9B,WAAW,CAAC,CACV;YAAEyB,MAAM,EAAE,KAAK;YAAEC,IAAI,EAAE;UAAmC,CAAC,CAC5D,CAAC;QACJ;MACF,CAAC,MAAM;QACLK,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEnB,QAAQ,CAACM,IAAI,CAACa,KAAK,CAAC;QACnEC,KAAK,CAAC,gDAAgD,CAAC;MACzD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,IAAIA,KAAK,CAACnB,QAAQ,IAAImB,KAAK,CAACnB,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACnDgB,KAAK,CAAC,uCAAuC,CAAC;QAC9CvB,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;QAChCxB,YAAY,CAACwB,UAAU,CAAC,UAAU,CAAC;QACnCtC,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM;QACLqC,KAAK,CAAC,yDAAyD,CAAC;MAClE;IACF;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,MAAM3B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,IAAI2B,WAAW,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAEzC,MAAMV,WAAW,GAAG;MAAEF,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEU;IAAY,CAAC;IACzDpC,WAAW,CAAEsC,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEX,WAAW,CAAC,CAAC;IAE7DzB,YAAY,CAAC,EAAE,CAAC;IAEhB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAM3B,KAAK,CAACqD,IAAI,CAC/B,GAAGpD,gBAAgB,OAAO,EAC1B;QAAEqD,OAAO,EAAEJ;MAAY,CAAC,EACxB;QACErB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAII,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAMW,WAAW,GAAGf,QAAQ,CAACM,IAAI,CAACS,WAAW;QAC7C5B,WAAW,CAAEsC,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;UAAEb,MAAM,EAAE,KAAK;UAAEC,IAAI,EAAEE;QAAY,CAAC,CACrC,CAAC;QACFxB,iBAAiB,CAAEqC,WAAW,IAAK,CACjC,GAAGA,WAAW,EACdL,WAAW,CAACP,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CACrC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMa,SAAS,GAAG7B,QAAQ,CAACM,IAAI;QAC/BnB,WAAW,CAAEsC,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;UACEb,MAAM,EAAE,KAAK;UACbC,IAAI,EAAE,UAAUgB,SAAS,CAACV,KAAK,IAAI,6BAA6B;QAClE,CAAC,CACF,CAAC;MACJ;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,IAAIW,YAAY,GAAG,8CAA8C;MACjE,IAAIX,KAAK,CAACnB,QAAQ,IAAImB,KAAK,CAACnB,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACnD0B,YAAY,GAAG,uCAAuC;QACtDjC,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;QAChCxB,YAAY,CAACwB,UAAU,CAAC,UAAU,CAAC;QACnCtC,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,MAAM,IACLoC,KAAK,CAACnB,QAAQ,IACdmB,KAAK,CAACnB,QAAQ,CAACM,IAAI,IACnBa,KAAK,CAACnB,QAAQ,CAACM,IAAI,CAACa,KAAK,EACzB;QACAW,YAAY,GAAG,UAAUX,KAAK,CAACnB,QAAQ,CAACM,IAAI,CAACa,KAAK,EAAE;MACtD;MACAhC,WAAW,CAAEsC,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEb,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEiB;MAAa,CAAC,CACtC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B5C,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACjBA,WAAW,CAAC,CAAC;MAAEyB,MAAM,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAmC,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMmB,qBAAqB,GAAIC,CAAC,IAAK;IACnC5C,YAAY,CAAC4C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCd,WAAW,CAAClC,SAAS,CAAC;EACxB,CAAC;EAED,MAAMiD,mBAAmB,GAAIJ,CAAC,IAAK;IACjC,IAAIA,CAAC,CAACK,GAAG,KAAK,OAAO,EAAE;MACrBhB,WAAW,CAAClC,SAAS,CAAC;IACxB;EACF,CAAC;EAED,MAAMmD,wBAAwB,GAAIN,CAAC,IAAK;IACtCX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACM,WAAW,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB5C,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;IAChCxB,YAAY,CAACwB,UAAU,CAAC,UAAU,CAAC;IACnClC,WAAW,CAAC,EAAE,CAAC;IACfI,iBAAiB,CAAC,EAAE,CAAC;IACrBR,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;;EAED;EACA,MAAM2D,mBAAmB,GAAGA,CAAA,KAAMjD,sBAAsB,CAAEkD,IAAI,IAAK,CAACA,IAAI,CAAC;EACzE,MAAMC,kBAAkB,GAAGA,CAAA,KAAMnD,sBAAsB,CAAC,KAAK,CAAC;EAE9DtB,SAAS,CAAC,MAAM;IACd,MAAM0E,iBAAiB,GAAGC,QAAQ,CAACC,aAAa,CAC9C,0BACF,CAAC;IACD,IAAIF,iBAAiB,EAAE;MACrBA,iBAAiB,CAACG,SAAS,GAAGH,iBAAiB,CAACI,YAAY;IAC9D;EACF,CAAC,EAAE,CAAC/D,QAAQ,CAAC,CAAC;EAEd,oBACEV,OAAA,CAAAE,SAAA;IAAAwE,QAAA,gBAEE1E,OAAA;MAAK2E,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEV,mBAAoB;MAAAQ,QAAA,gBAC1D1E,OAAA;QAAK6E,GAAG,EAAE1E,YAAa;QAAC2E,GAAG,EAAC,eAAe;QAACH,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtElF,OAAA;QAAA0E,QAAA,EAAI;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAGLlE,mBAAmB,iBAClBhB,OAAA;MAAK2E,SAAS,EAAC,kBAAkB;MAACC,OAAO,EAAER;IAAmB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjE,eAEDlF,OAAA;MAAK2E,SAAS,EAAE,aAAa3D,mBAAmB,GAAG,WAAW,GAAG,EAAE,EAAG;MAAA0D,QAAA,gBACpE1E,OAAA;QAAO2E,SAAS,EAAE,WAAW3D,mBAAmB,GAAG,MAAM,GAAG,EAAE,EAAG;QAAA0D,QAAA,gBAE/D1E,OAAA;UACE2E,SAAS,EAAC,mBAAmB;UAC7BC,OAAO,EAAER,kBAAmB;UAC5B,cAAW,eAAe;UAAAM,QAAA,eAE1B1E,OAAA;YACEmF,KAAK,EAAC,4BAA4B;YAClCC,KAAK,EAAC,IAAI;YACVC,MAAM,EAAC,IAAI;YACXC,OAAO,EAAC,WAAW;YAAAZ,QAAA,eAEnB1E,OAAA;cACEuF,IAAI,EAAC,cAAc;cACnBC,CAAC,EAAC;YAAgZ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAETlF,OAAA;UAAK2E,SAAS,EAAC,2BAA2B;UAAAD,QAAA,gBACxC1E,OAAA;YACE6E,GAAG,EAAE1E,YAAa;YAClB2E,GAAG,EAAC,eAAe;YACnBH,SAAS,EAAC;UAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACFlF,OAAA;YAAA0E,QAAA,EAAI;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eAENlF,OAAA;UAAQ2E,SAAS,EAAC,cAAc;UAACC,OAAO,EAAErB,aAAc;UAAAmB,QAAA,gBACtD1E,OAAA;YACEmF,KAAK,EAAC,4BAA4B;YAClCC,KAAK,EAAC,IAAI;YACVC,MAAM,EAAC,IAAI;YACXC,OAAO,EAAC,WAAW;YACnBC,IAAI,EAAC,MAAM;YACXE,MAAM,EAAC,cAAc;YAAAf,QAAA,eAErB1E,OAAA;cACEwF,CAAC,EAAC,kBAAkB;cACpBE,WAAW,EAAC,GAAG;cACfC,aAAa,EAAC;YAAO;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,YAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETlF,OAAA;UAAG2E,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtClF,OAAA;UAAI2E,SAAS,EAAC,aAAa;UAAAD,QAAA,EACxB5D,cAAc,CAAC8E,GAAG,CAAC,CAAC1D,KAAK,EAAE2D,KAAK,kBAC/B7F,OAAA;YAAA0E,QAAA,EAAiBxC;UAAK,GAAb2D,KAAK;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAC5B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAELlF,OAAA;UAAQ2E,SAAS,EAAC,aAAa;UAACC,OAAO,EAAEX,YAAa;UAAAS,QAAA,gBACpD1E,OAAA;YACEmF,KAAK,EAAC,4BAA4B;YAClCC,KAAK,EAAC,IAAI;YACVC,MAAM,EAAC,IAAI;YACXC,OAAO,EAAC,WAAW;YAAAZ,QAAA,gBAEnB1E,OAAA;cACEwF,CAAC,EAAC,aAAa;cACfD,IAAI,EAAC,MAAM;cACXE,MAAM,EAAC,cAAc;cACrBC,WAAW,EAAC;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFlF,OAAA;cACEwF,CAAC,EAAC,yBAAyB;cAC3BD,IAAI,EAAC,MAAM;cACXE,MAAM,EAAC,cAAc;cACrBC,WAAW,EAAC,KAAK;cACjBC,aAAa,EAAC,OAAO;cACrBG,cAAc,EAAC;YAAO;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,UAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAERlF,OAAA;QACE2E,SAAS,EAAC,cAAc;QACxBC,OAAO,EAAE5D,mBAAmB,GAAGoD,kBAAkB,GAAG2B,SAAU;QAAArB,QAAA,gBAE9D1E,OAAA;UAAK2E,SAAS,EAAC,yBAAyB;UAAAD,QAAA,eACtC1E,OAAA;YAAA0E,QAAA,EACGhE,QAAQ,CAACkF,GAAG,CAAC,CAACI,GAAG,EAAEH,KAAK,kBACvB7F,OAAA;cAEE2E,SAAS,EACPqB,GAAG,CAAC5D,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG,aAC1C;cAAAsC,QAAA,EAEAsB,GAAG,CAAC3D;YAAI,GALJwD,KAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMR,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAENlF,OAAA;UAAK2E,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC5B1E,OAAA;YACEiG,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,WAAW;YACdC,WAAW,EAAC,uBAAuB;YACnCxC,KAAK,EAAE/C,SAAU;YACjBwF,QAAQ,EAAE5C,qBAAsB;YAChC6C,UAAU,EAAExC;UAAoB;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC,eACFlF,OAAA;YAAQkG,EAAE,EAAC,aAAa;YAACtB,OAAO,EAAEhB,qBAAsB;YAAAc,QAAA,EAAC;UAEzD;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC5E,EAAA,CAjTID,QAAQ;EAAA,QACKT,WAAW;AAAA;AAAA0G,EAAA,GADxBjG,QAAQ;AAmTd,eAAeA,QAAQ;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}