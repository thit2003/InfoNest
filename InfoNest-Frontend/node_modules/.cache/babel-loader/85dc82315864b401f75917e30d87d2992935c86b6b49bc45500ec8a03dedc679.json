{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Home.css\";\nimport { BACKEND_API_BASE } from \"../config\";\nimport TypingIndicator from '../components/TypingIndicator';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst infonestLogo = \"/logo.png\";\nconst userAvatar = \"/avatar.png\";\n\n// NEW: Recommended prompts shown on Home Page\nconst recommendedPrompts = [\"When is the admission deadline?\", \"How do I register for courses?\", \"How can I change my major?\", \"Where is the registrar office?\", \"What are tuition fees?\", \"How do I apply for dorm housing?\", \"Where is ITS Help Desk?\", \"Library hours and resources?\"];\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"User\");\n  const [messages, setMessages] = useState([]);\n  const [chatInput, setChatInput] = useState(\"\");\n  const [sidebarHistory, setSidebarHistory] = useState([]);\n  const [isBotThinking, setIsBotThinking] = useState(false);\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const storedUsername = localStorage.getItem(\"username\");\n    if (!token) {\n      navigate(\"/login\");\n      return;\n    }\n    setUsername(storedUsername || \"User\");\n    setCurrentUser(storedUsername || null);\n    // Fetch history on mount for this user\n    const fetchChatHistory = async () => {\n      try {\n        const response = await axios.get(`${BACKEND_API_BASE}/history`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200) {\n          const historyData = response.data.data || [];\n          const formattedMessages = [];\n          const newSidebarHistory = [];\n          historyData.forEach(entry => {\n            formattedMessages.push({\n              sender: \"user\",\n              text: entry.userMessage\n            });\n            formattedMessages.push({\n              sender: \"bot\",\n              text: entry.botResponse\n            });\n            newSidebarHistory.push(entry.userMessage.substring(0, 25) + \"...\");\n          });\n          setMessages(formattedMessages.length ? formattedMessages : [{\n            sender: \"bot\",\n            text: \"Hello! How can I help you today?\"\n          }]);\n          setSidebarHistory(newSidebarHistory);\n        }\n      } catch (err) {\n        var _err$response;\n        console.error(\"Failed to load history:\", err);\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n          localStorage.removeItem(\"token\");\n          localStorage.removeItem(\"username\");\n          navigate(\"/login\");\n        }\n      }\n    };\n    fetchChatHistory();\n  }, [navigate]);\n  const extractBotResponse = data => {\n    var _data$data;\n    if (!data) return null;\n    if (typeof data === \"string\") return data;\n    if (data.botResponse) return data.botResponse;\n    if ((_data$data = data.data) !== null && _data$data !== void 0 && _data$data.response) return data.data.response;\n    return null;\n  };\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem(\"token\");\n    if (!token || messageText.trim() === \"\") return;\n    if (isBotThinking) return;\n    const userMessage = {\n      sender: \"user\",\n      text: messageText\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setChatInput(\"\");\n    setIsBotThinking(true);\n    try {\n      const response = await axios.post(`${BACKEND_API_BASE}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        let botResponse = extractBotResponse(response.data);\n        if (!botResponse) {\n          console.warn(\"Empty bot response; inserting placeholder.\");\n          botResponse = \"[No answer returned]\";\n        }\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: botResponse\n        }]);\n        setSidebarHistory(prev => [...prev, messageText.substring(0, 25) + \"...\"]);\n      } else {\n        const errorData = response.data;\n        setMessages(prev => [...prev, {\n          sender: \"bot\",\n          text: `Error: ${errorData.error || \"Failed to get bot response.\"}`\n        }]);\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Network error sending message:\", error);\n      let errorMessage = \"Network error. Could not connect to chatbot.\";\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        errorMessage = \"Session expired. Please log in again.\";\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        navigate(\"/login\");\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: errorMessage\n      }]);\n    } finally {\n      setIsBotThinking(false);\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([{\n      sender: \"bot\",\n      text: \"Hello! How can I help you today?\"\n    }]);\n  };\n  const handleChatInputChange = e => setChatInput(e.target.value);\n  const handleSendButtonClick = () => sendMessage(chatInput);\n  const handleInputKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage(chatInput);\n  };\n  const handleQuickQuestionClick = e => sendMessage(e.target.textContent);\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n    setMessages([]);\n    setSidebarHistory([]);\n    navigate(\"/login\");\n  };\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen(prev => !prev);\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\n  useEffect(() => {\n    const messagesContainer = document.querySelector(\".chat-messages-container\");\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-header\",\n      onClick: toggleMobileSidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: infonestLogo,\n        alt: \"InfoNest Logo\",\n        className: \"circle-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"InfoNest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), isMobileSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar-backdrop\",\n      onClick: closeMobileSidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `container ${isMobileSidebarOpen ? \"no-scroll\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: `sidebar ${isMobileSidebarOpen ? \"open\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-sidebar-btn\",\n          onClick: closeMobileSidebar,\n          \"aria-label\": \"Close sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"32\",\n            height: \"32\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fill: \"currentColor\",\n              d: \"m12 13.4l2.9 2.9q.275.275.7.275t.7-.275t.275-.7t-.275-.7L13.4 12l2.9-2.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275L12 10.6L9.1 7.7q-.275-.275-.7-.275t-.7.275t-.275.7t.275.7l2.9 2.9l-2.9 2.9q-.275.275-.275.7t.275.7t.7.275t.7-.275zm0 8.6q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.212 8.1T22 12t-.788 3.9t-2.137 3.175T15.9 21.212T12 22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-section desktop-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: infonestLogo,\n            alt: \"InfoNest Logo\",\n            className: \"circle-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"InfoNest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-btn\",\n          onClick: handleNewChat,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 5v14M5 12h14\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), \"New Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-section desktop-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"prompt-title\",\n            children: \"PROMPTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-grid\",\n            children: recommendedPrompts.map((p, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"prompt-chip\",\n              onClick: () => sendMessage(p),\n              disabled: isBotThinking,\n              title: p,\n              children: p\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"recent-title\",\n          children: \"RECENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"recent-list\",\n          children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: entry\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Log-Out-Btn\",\n          onClick: handleLogout,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"22\",\n            height: \"22\",\n            viewBox: \"0 0 14 14\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5 2h5v10H5\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M7 7H1m0 0 2-2m-2 2 2 2\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"1.2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), \"Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        onClick: isMobileSidebarOpen ? closeMobileSidebar : undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-section mobile-only\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"prompt-title\",\n            children: \"Try asking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-grid\",\n            children: recommendedPrompts.map((p, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"prompt-chip\",\n              onClick: () => sendMessage(p),\n              disabled: isBotThinking,\n              title: p,\n              children: p\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: msg.sender === \"user\" ? \"user-message\" : \"bot-message\",\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {\n            visible: isBotThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ask-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"chatInput\",\n            placeholder: \"Ask InfoNest anything\",\n            value: chatInput,\n            onChange: handleChatInputChange,\n            onKeyPress: handleInputKeyPress,\n            disabled: isBotThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"sendChatBtn\",\n            onClick: handleSendButtonClick,\n            disabled: isBotThinking || chatInput.trim() === \"\",\n            children: isBotThinking ? \"...\" : \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"ZSfyTFS3Mz+MRTuiBxZiVONDyOg=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","BACKEND_API_BASE","TypingIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","infonestLogo","userAvatar","recommendedPrompts","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","isBotThinking","setIsBotThinking","isMobileSidebarOpen","setIsMobileSidebarOpen","currentUser","setCurrentUser","token","localStorage","getItem","storedUsername","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","substring","length","err","_err$response","console","error","removeItem","extractBotResponse","_data$data","sendMessage","messageText","trim","prev","post","message","warn","errorData","_error$response","_error$response2","_error$response2$data","errorMessage","handleNewChat","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleQuickQuestionClick","textContent","handleLogout","toggleMobileSidebar","closeMobileSidebar","messagesContainer","document","querySelector","scrollTop","scrollHeight","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","map","p","i","disabled","title","index","strokeLinejoin","undefined","msg","visible","type","id","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Home.css\";\r\nimport { BACKEND_API_BASE } from \"../config\";\r\nimport TypingIndicator from '../components/TypingIndicator';\r\n\r\nconst infonestLogo = \"/logo.png\";\r\nconst userAvatar = \"/avatar.png\";\r\n\r\n// NEW: Recommended prompts shown on Home Page\r\nconst recommendedPrompts = [\r\n  \"When is the admission deadline?\",\r\n  \"How do I register for courses?\",\r\n  \"How can I change my major?\",\r\n  \"Where is the registrar office?\",\r\n  \"What are tuition fees?\",\r\n  \"How do I apply for dorm housing?\",\r\n  \"Where is ITS Help Desk?\",\r\n  \"Library hours and resources?\",\r\n];\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"User\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState(\"\");\r\n  const [sidebarHistory, setSidebarHistory] = useState([]);\r\n  const [isBotThinking, setIsBotThinking] = useState(false);\r\n  const [isMobileSidebarOpen, setIsMobileSidebarOpen] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const storedUsername = localStorage.getItem(\"username\");\r\n    if (!token) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n    setUsername(storedUsername || \"User\");\r\n    setCurrentUser(storedUsername || null);\r\n    // Fetch history on mount for this user\r\n    const fetchChatHistory = async () => {\r\n      try {\r\n        const response = await axios.get(`${BACKEND_API_BASE}/history`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (response.status === 200) {\r\n          const historyData = response.data.data || [];\r\n          const formattedMessages = [];\r\n          const newSidebarHistory = [];\r\n          historyData.forEach((entry) => {\r\n            formattedMessages.push({ sender: \"user\", text: entry.userMessage });\r\n            formattedMessages.push({ sender: \"bot\", text: entry.botResponse });\r\n            newSidebarHistory.push(entry.userMessage.substring(0, 25) + \"...\");\r\n          });\r\n          setMessages(\r\n            formattedMessages.length\r\n              ? formattedMessages\r\n              : [{ sender: \"bot\", text: \"Hello! How can I help you today?\" }]\r\n          );\r\n          setSidebarHistory(newSidebarHistory);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to load history:\", err);\r\n        if (err.response?.status === 401) {\r\n          localStorage.removeItem(\"token\");\r\n          localStorage.removeItem(\"username\");\r\n          navigate(\"/login\");\r\n        }\r\n      }\r\n    };\r\n    fetchChatHistory();\r\n  }, [navigate]);\r\n\r\n  const extractBotResponse = (data) => {\r\n    if (!data) return null;\r\n    if (typeof data === \"string\") return data;\r\n    if (data.botResponse) return data.botResponse;\r\n    if (data.data?.response) return data.data.response;\r\n    return null;\r\n  };\r\n\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token || messageText.trim() === \"\") return;\r\n    if (isBotThinking) return;\r\n\r\n    const userMessage = { sender: \"user\", text: messageText };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setChatInput(\"\");\r\n    setIsBotThinking(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${BACKEND_API_BASE}/chat`,\r\n        { message: messageText },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        let botResponse = extractBotResponse(response.data);\r\n        if (!botResponse) {\r\n          console.warn(\"Empty bot response; inserting placeholder.\");\r\n          botResponse = \"[No answer returned]\";\r\n        }\r\n\r\n        setMessages((prev) => [...prev, { sender: \"bot\", text: botResponse }]);\r\n        setSidebarHistory((prev) => [\r\n          ...prev,\r\n          messageText.substring(0, 25) + \"...\",\r\n        ]);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          {\r\n            sender: \"bot\",\r\n            text: `Error: ${errorData.error || \"Failed to get bot response.\"}`,\r\n          },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Network error sending message:\", error);\r\n      let errorMessage = \"Network error. Could not connect to chatbot.\";\r\n      if (error.response?.status === 401) {\r\n        errorMessage = \"Session expired. Please log in again.\";\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n        navigate(\"/login\");\r\n      } else if (error.response?.data?.error) {\r\n        errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: errorMessage }]);\r\n    } finally {\r\n      setIsBotThinking(false);\r\n    }\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([{ sender: \"bot\", text: \"Hello! How can I help you today?\" }]);\r\n  };\r\n\r\n  const handleChatInputChange = (e) => setChatInput(e.target.value);\r\n  const handleSendButtonClick = () => sendMessage(chatInput);\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage(chatInput);\r\n  };\r\n  const handleQuickQuestionClick = (e) => sendMessage(e.target.textContent);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"username\");\r\n    setMessages([]);\r\n    setSidebarHistory([]);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const toggleMobileSidebar = () => setIsMobileSidebarOpen((prev) => !prev);\r\n  const closeMobileSidebar = () => setIsMobileSidebarOpen(false);\r\n\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector(\".chat-messages-container\");\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mobile-header\" onClick={toggleMobileSidebar}>\r\n        <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n        <h1>InfoNest</h1>\r\n      </div>\r\n\r\n      {isMobileSidebarOpen && (\r\n        <div className=\"sidebar-backdrop\" onClick={closeMobileSidebar} />\r\n      )}\r\n\r\n      <div className={`container ${isMobileSidebarOpen ? \"no-scroll\" : \"\"}`}>\r\n        <aside className={`sidebar ${isMobileSidebarOpen ? \"open\" : \"\"}`}>\r\n          <button\r\n            className=\"close-sidebar-btn\"\r\n            onClick={closeMobileSidebar}\r\n            aria-label=\"Close sidebar\"\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"m12 13.4l2.9 2.9q.275.275.7.275t.7-.275t.275-.7t-.275-.7L13.4 12l2.9-2.9q.275-.275.275-.7t-.275-.7t-.7-.275t-.7.275L12 10.6L9.1 7.7q-.275-.275-.7-.275t-.7.275t-.275.7t.275.7l2.9 2.9l-2.9 2.9q-.275.275-.275.7t.275.7t.7.275t.7-.275zm0 8.6q-2.075 0-3.9-.788t-3.175-2.137T2.788 15.9T2 12t.788-3.9t2.137-3.175T8.1 2.788T12 2t3.9.788t3.175 2.137T21.212 8.1T22 12t-.788 3.9t-2.137 3.175T15.9 21.212T12 22\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          <div className=\"logo-section desktop-only\">\r\n            <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n            <h1>InfoNest</h1>\r\n          </div>\r\n\r\n          <button className=\"new-chat-btn\" onClick={handleNewChat}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path d=\"M12 5v14M5 12h14\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n            </svg>\r\n            New Chat\r\n          </button>\r\n\r\n          {/* NEW: Prompt recommendations in sidebar (desktop) */}\r\n          <div className=\"prompt-section desktop-only\">\r\n            <p className=\"prompt-title\">PROMPTS</p>\r\n            <div className=\"prompt-grid\">\r\n              {recommendedPrompts.map((p, i) => (\r\n                <button\r\n                  key={i}\r\n                  className=\"prompt-chip\"\r\n                  onClick={() => sendMessage(p)}\r\n                  disabled={isBotThinking}\r\n                  title={p}\r\n                >\r\n                  {p}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <p className=\"recent-title\">RECENT</p>\r\n          <ul className=\"recent-list\">\r\n            {sidebarHistory.map((entry, index) => (\r\n              <li key={index}>{entry}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          <button className=\"Log-Out-Btn\" onClick={handleLogout}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 14 14\">\r\n              <path d=\"M5 2h5v10H5\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.2\" />\r\n              <path d=\"M7 7H1m0 0 2-2m-2 2 2 2\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n            </svg>\r\n            Logout\r\n          </button>\r\n        </aside>\r\n\r\n        <main className=\"main-content\" onClick={isMobileSidebarOpen ? closeMobileSidebar : undefined}>\r\n          {/* NEW: Prompt recommendations for mobile, shown above messages */}\r\n          <div className=\"prompt-section mobile-only\">\r\n            <p className=\"prompt-title\">Try asking</p>\r\n            <div className=\"prompt-grid\">\r\n              {recommendedPrompts.map((p, i) => (\r\n                <button\r\n                  key={i}\r\n                  className=\"prompt-chip\"\r\n                  onClick={() => sendMessage(p)}\r\n                  disabled={isBotThinking}\r\n                  title={p}\r\n                >\r\n                  {p}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-messages-container\">\r\n            <ul>\r\n              {messages.map((msg, index) => (\r\n                <li key={index} className={msg.sender === \"user\" ? \"user-message\" : \"bot-message\"}>\r\n                  {msg.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <TypingIndicator visible={isBotThinking} />\r\n          </div>\r\n\r\n          <div className=\"ask-container\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"chatInput\"\r\n              placeholder=\"Ask InfoNest anything\"\r\n              value={chatInput}\r\n              onChange={handleChatInputChange}\r\n              onKeyPress={handleInputKeyPress}\r\n              disabled={isBotThinking}\r\n            />\r\n            <button\r\n              id=\"sendChatBtn\"\r\n              onClick={handleSendButtonClick}\r\n              disabled={isBotThinking || chatInput.trim() === \"\"}\r\n            >\r\n              {isBotThinking ? \"...\" : \"Send\"}\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}