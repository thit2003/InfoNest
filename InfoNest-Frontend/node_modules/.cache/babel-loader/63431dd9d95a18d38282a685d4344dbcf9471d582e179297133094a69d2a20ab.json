{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\components\\\\GoogleSignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { BACKEND_API_BASE } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSignIn = ({\n  onSuccess,\n  onError,\n  buttonText = 'Continue with Google'\n}) => {\n  _s();\n  const loadedRef = useRef(false);\n  const [loading, setLoading] = useState(false);\n  const log = (...a) => console.log('[GoogleSignIn]', ...a);\n  useEffect(() => {\n    if (loadedRef.current) return;\n    loadedRef.current = true;\n    log('Runtime client ID:', process.env.REACT_APP_GOOGLE_CLIENT_ID);\n    if (!process.env.REACT_APP_GOOGLE_CLIENT_ID) {\n      onError && onError('Google Client ID missing. Check .env and restart dev server.');\n      return;\n    }\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      if (!window.google) {\n        onError && onError('Google script failed to expose window.google');\n        return;\n      }\n      try {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: async resp => {\n            log('Credential callback fired:', !!resp.credential);\n            if (!resp.credential) {\n              onError && onError('No credential returned from Google.');\n              return;\n            }\n            try {\n              var _r$data;\n              setLoading(true);\n              const r = await axios.post(`${BACKEND_API_BASE}/auth/google`, {\n                idToken: resp.credential\n              });\n              log('Backend /auth/google response:', r.data);\n              if ((_r$data = r.data) !== null && _r$data !== void 0 && _r$data.success) {\n                onSuccess && onSuccess(r.data);\n              } else {\n                onError && onError(r.data.error || 'Google auth failed.');\n              }\n            } catch (e) {\n              log('Network error posting to backend', e);\n              onError && onError('Network error during Google auth.');\n            } finally {\n              setLoading(false);\n            }\n          }\n        });\n        window.google.accounts.id.renderButton(document.getElementById('gsi-btn-slot'), {\n          theme: 'outline',\n          size: 'large',\n          width: 250\n        });\n      } catch (err) {\n        log('Initialization exception', err);\n        onError && onError('Failed to initialize Google Identity.');\n      }\n    };\n    script.onerror = () => onError && onError('Failed to load Google script.');\n    document.head.appendChild(script);\n    return () => script.remove();\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gsi-btn-slot\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: loading,\n      onClick: () => window.google && window.google.accounts.id.prompt(),\n      style: {\n        width: '100%',\n        padding: '10px',\n        backgroundColor: '#fff',\n        border: '1px solid #4285F4',\n        color: '#4285F4',\n        fontWeight: 'bold',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: loading ? 'Authenticating...' : buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSignIn, \"zv7KYVYQyJdiDl4cQQwggCNHJvA=\");\n_c = GoogleSignIn;\nexport default GoogleSignIn;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignIn\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","BACKEND_API_BASE","jsxDEV","_jsxDEV","GoogleSignIn","onSuccess","onError","buttonText","_s","loadedRef","loading","setLoading","log","a","console","current","process","env","REACT_APP_GOOGLE_CLIENT_ID","script","document","createElement","src","async","defer","onload","window","google","accounts","id","initialize","client_id","callback","resp","credential","_r$data","r","post","idToken","data","success","error","e","renderButton","getElementById","theme","size","width","err","onerror","head","appendChild","remove","style","marginTop","children","display","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","prompt","padding","backgroundColor","border","color","fontWeight","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/components/GoogleSignIn.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { BACKEND_API_BASE } from '../config';\r\n\r\nconst GoogleSignIn = ({ onSuccess, onError, buttonText = 'Continue with Google' }) => {\r\n  const loadedRef = useRef(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const log = (...a) => console.log('[GoogleSignIn]', ...a);\r\n\r\n  useEffect(() => {\r\n    if (loadedRef.current) return;\r\n    loadedRef.current = true;\r\n\r\n    log('Runtime client ID:', process.env.REACT_APP_GOOGLE_CLIENT_ID);\r\n\r\n    if (!process.env.REACT_APP_GOOGLE_CLIENT_ID) {\r\n      onError && onError('Google Client ID missing. Check .env and restart dev server.');\r\n      return;\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n    script.src = 'https://accounts.google.com/gsi/client';\r\n    script.async = true;\r\n    script.defer = true;\r\n    script.onload = () => {\r\n      if (!window.google) {\r\n        onError && onError('Google script failed to expose window.google');\r\n        return;\r\n      }\r\n      try {\r\n        window.google.accounts.id.initialize({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          callback: async (resp) => {\r\n            log('Credential callback fired:', !!resp.credential);\r\n            if (!resp.credential) {\r\n              onError && onError('No credential returned from Google.');\r\n              return;\r\n            }\r\n            try {\r\n              setLoading(true);\r\n              const r = await axios.post(`${BACKEND_API_BASE}/auth/google`, { idToken: resp.credential });\r\n              log('Backend /auth/google response:', r.data);\r\n              if (r.data?.success) {\r\n                onSuccess && onSuccess(r.data);\r\n              } else {\r\n                onError && onError(r.data.error || 'Google auth failed.');\r\n              }\r\n            } catch (e) {\r\n              log('Network error posting to backend', e);\r\n              onError && onError('Network error during Google auth.');\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          }\r\n        });\r\n\r\n        window.google.accounts.id.renderButton(\r\n          document.getElementById('gsi-btn-slot'),\r\n          { theme: 'outline', size: 'large', width: 250 }\r\n        );\r\n\r\n      } catch (err) {\r\n        log('Initialization exception', err);\r\n        onError && onError('Failed to initialize Google Identity.');\r\n      }\r\n    };\r\n    script.onerror = () => onError && onError('Failed to load Google script.');\r\n    document.head.appendChild(script);\r\n    return () => script.remove();\r\n  }, [onSuccess, onError]);\r\n\r\n  return (\r\n    <div style={{ marginTop: 10 }}>\r\n      <div id=\"gsi-btn-slot\" style={{ display: 'flex', justifyContent: 'center', marginBottom: 8 }} />\r\n      <button\r\n        type=\"button\"\r\n        disabled={loading}\r\n        onClick={() => window.google && window.google.accounts.id.prompt()}\r\n        style={{\r\n            width: '100%', padding: '10px',\r\n            backgroundColor: '#fff', border: '1px solid #4285F4',\r\n            color: '#4285F4', fontWeight: 'bold',\r\n            borderRadius: '4px', cursor: 'pointer'\r\n        }}\r\n      >\r\n        {loading ? 'Authenticating...' : buttonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSignIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}