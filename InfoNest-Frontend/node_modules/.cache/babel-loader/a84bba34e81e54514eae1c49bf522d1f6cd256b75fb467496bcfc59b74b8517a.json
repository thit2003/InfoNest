{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-Frontend\\\\src\\\\components\\\\GoogleSignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { BACKEND_API_BASE } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSignIn = ({\n  onSuccess,\n  onError,\n  buttonText = 'Continue with Google'\n}) => {\n  _s();\n  const scriptAppended = useRef(false);\n  const [loading, setLoading] = useState(false);\n  function log(...args) {\n    console.log('[GoogleSignIn]', ...args);\n  }\n  function loadScript() {\n    return new Promise((resolve, reject) => {\n      if (document.getElementById('google-identity-script')) {\n        log('Script already present');\n        return resolve();\n      }\n      const script = document.createElement('script');\n      script.id = 'google-identity-script';\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        log('Google script loaded');\n        resolve();\n      };\n      script.onerror = e => {\n        log('Google script failed', e);\n        reject(e);\n      };\n      document.head.appendChild(script);\n    });\n  }\n  useEffect(() => {\n    let cancelled = false;\n    async function init() {\n      log('Client ID seen at runtime:', process.env.REACT_APP_GOOGLE_CLIENT_ID);\n      if (!process.env.REACT_APP_GOOGLE_CLIENT_ID) {\n        onError && onError('Missing REACT_APP_GOOGLE_CLIENT_ID');\n        return;\n      }\n      try {\n        await loadScript();\n        if (cancelled) return;\n        if (!window.google) {\n          onError && onError('Google object not available after script load.');\n          return;\n        }\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n          callback: async response => {\n            log('Credential callback fired', response);\n            if (!response || !response.credential) {\n              onError && onError('No credential received.');\n              return;\n            }\n            try {\n              var _r$data;\n              setLoading(true);\n              const r = await axios.post(`${BACKEND_API_BASE}/auth/google`, {\n                idToken: response.credential\n              });\n              log('Backend response', r.data);\n              if ((_r$data = r.data) !== null && _r$data !== void 0 && _r$data.success) {\n                onSuccess && onSuccess(r.data);\n              } else {\n                onError && onError(r.data.error || 'Google auth failed.');\n              }\n            } catch (e) {\n              log('Network/Server error posting to backend', e);\n              onError && onError('Network error during Google auth.');\n            } finally {\n              setLoading(false);\n            }\n          },\n          // Add this to help debugging suppressed prompt\n          cancel_on_tap_outside: true\n        });\n\n        // RENDER OFFICIAL BUTTON (ensures visible UI)\n        const container = document.getElementById('gsi-official-button');\n        if (container) {\n          log('Rendering official Google button');\n          window.google.accounts.id.renderButton(container, {\n            theme: 'outline',\n            size: 'large',\n            width: 250\n          });\n        } else {\n          log('No container for official button');\n        }\n\n        // Optionally show One Tap automatically and log reasons if suppressed\n        window.google.accounts.id.prompt(notification => {\n          log('Prompt notification', notification);\n          if (notification.isNotDisplayed()) {\n            log('One Tap not displayed reason:', notification.getNotDisplayedReason());\n          }\n          if (notification.isSkippedMoment()) {\n            log('One Tap skipped reason:', notification.getSkippedReason());\n          }\n        });\n      } catch (err) {\n        log('Initialization error', err);\n        onError && onError('Failed to initialize Google Sign-In.');\n      }\n    }\n    if (!scriptAppended.current) {\n      scriptAppended.current = true;\n      init();\n    }\n    return () => {\n      cancelled = true;\n    };\n  }, [onSuccess, onError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '15px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gsi-official-button\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: loading,\n      onClick: () => {\n        if (!window.google) {\n          onError && onError('Google not ready');\n          return;\n        }\n        window.google.accounts.id.prompt(n => {\n          console.log('[GoogleSignIn] manual prompt result', n);\n        });\n      },\n      style: {\n        width: '100%',\n        padding: '10px',\n        backgroundColor: '#ffffff',\n        border: '1px solid #4285F4',\n        color: '#4285F4',\n        fontWeight: 'bold',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: loading ? 'Authenticating...' : buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSignIn, \"0WCw4gkSafi+cZz5Nuq9KRc9OqM=\");\n_c = GoogleSignIn;\nexport default GoogleSignIn;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignIn\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","BACKEND_API_BASE","jsxDEV","_jsxDEV","GoogleSignIn","onSuccess","onError","buttonText","_s","scriptAppended","loading","setLoading","log","args","console","loadScript","Promise","resolve","reject","document","getElementById","script","createElement","id","src","async","defer","onload","onerror","e","head","appendChild","cancelled","init","process","env","REACT_APP_GOOGLE_CLIENT_ID","window","google","accounts","initialize","client_id","callback","response","credential","_r$data","r","post","idToken","data","success","error","cancel_on_tap_outside","container","renderButton","theme","size","width","prompt","notification","isNotDisplayed","getNotDisplayedReason","isSkippedMoment","getSkippedReason","err","current","style","marginTop","textAlign","children","display","justifyContent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","n","padding","backgroundColor","border","color","fontWeight","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-Frontend/src/components/GoogleSignIn.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { BACKEND_API_BASE } from '../config';\r\n\r\nconst GoogleSignIn = ({ onSuccess, onError, buttonText = 'Continue with Google' }) => {\r\n  const scriptAppended = useRef(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function log(...args) { console.log('[GoogleSignIn]', ...args); }\r\n\r\n  function loadScript() {\r\n    return new Promise((resolve, reject) => {\r\n      if (document.getElementById('google-identity-script')) {\r\n        log('Script already present');\r\n        return resolve();\r\n      }\r\n      const script = document.createElement('script');\r\n      script.id = 'google-identity-script';\r\n      script.src = 'https://accounts.google.com/gsi/client';\r\n      script.async = true;\r\n      script.defer = true;\r\n      script.onload = () => { log('Google script loaded'); resolve(); };\r\n      script.onerror = (e) => { log('Google script failed', e); reject(e); };\r\n      document.head.appendChild(script);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    let cancelled = false;\r\n    async function init() {\r\n      log('Client ID seen at runtime:', process.env.REACT_APP_GOOGLE_CLIENT_ID);\r\n      if (!process.env.REACT_APP_GOOGLE_CLIENT_ID) {\r\n        onError && onError('Missing REACT_APP_GOOGLE_CLIENT_ID');\r\n        return;\r\n      }\r\n      try {\r\n        await loadScript();\r\n        if (cancelled) return;\r\n        if (!window.google) {\r\n          onError && onError('Google object not available after script load.');\r\n          return;\r\n        }\r\n\r\n        window.google.accounts.id.initialize({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          callback: async (response) => {\r\n            log('Credential callback fired', response);\r\n            if (!response || !response.credential) {\r\n              onError && onError('No credential received.');\r\n              return;\r\n            }\r\n            try {\r\n              setLoading(true);\r\n              const r = await axios.post(`${BACKEND_API_BASE}/auth/google`, {\r\n                idToken: response.credential\r\n              });\r\n              log('Backend response', r.data);\r\n              if (r.data?.success) {\r\n                onSuccess && onSuccess(r.data);\r\n              } else {\r\n                onError && onError(r.data.error || 'Google auth failed.');\r\n              }\r\n            } catch (e) {\r\n              log('Network/Server error posting to backend', e);\r\n              onError && onError('Network error during Google auth.');\r\n            } finally {\r\n              setLoading(false);\r\n            }\r\n          },\r\n          // Add this to help debugging suppressed prompt\r\n          cancel_on_tap_outside: true\r\n        });\r\n\r\n        // RENDER OFFICIAL BUTTON (ensures visible UI)\r\n        const container = document.getElementById('gsi-official-button');\r\n        if (container) {\r\n          log('Rendering official Google button');\r\n          window.google.accounts.id.renderButton(container, {\r\n            theme: 'outline',\r\n            size: 'large',\r\n            width: 250\r\n          });\r\n        } else {\r\n          log('No container for official button');\r\n        }\r\n\r\n        // Optionally show One Tap automatically and log reasons if suppressed\r\n        window.google.accounts.id.prompt((notification) => {\r\n          log('Prompt notification', notification);\r\n          if (notification.isNotDisplayed()) {\r\n            log('One Tap not displayed reason:', notification.getNotDisplayedReason());\r\n          }\r\n          if (notification.isSkippedMoment()) {\r\n            log('One Tap skipped reason:', notification.getSkippedReason());\r\n          }\r\n        });\r\n\r\n      } catch (err) {\r\n        log('Initialization error', err);\r\n        onError && onError('Failed to initialize Google Sign-In.');\r\n      }\r\n    }\r\n\r\n    if (!scriptAppended.current) {\r\n      scriptAppended.current = true;\r\n      init();\r\n    }\r\n    return () => { cancelled = true; };\r\n  }, [onSuccess, onError]);\r\n\r\n  return (\r\n    <div style={{ marginTop: '15px', textAlign: 'center' }}>\r\n      {/* Official rendered button (guarantees UI) */}\r\n      <div id=\"gsi-official-button\" style={{ display: 'flex', justifyContent: 'center', marginBottom: '10px' }}></div>\r\n      {/* Fallback custom button (optional) */}\r\n      <button\r\n        type=\"button\"\r\n        disabled={loading}\r\n        onClick={() => {\r\n          if (!window.google) { onError && onError('Google not ready'); return; }\r\n          window.google.accounts.id.prompt((n) => {\r\n            console.log('[GoogleSignIn] manual prompt result', n);\r\n          });\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          padding: '10px',\r\n          backgroundColor: '#ffffff',\r\n          border: '1px solid #4285F4',\r\n          color: '#4285F4',\r\n          fontWeight: 'bold',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        {loading ? 'Authenticating...' : buttonText}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleSignIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}