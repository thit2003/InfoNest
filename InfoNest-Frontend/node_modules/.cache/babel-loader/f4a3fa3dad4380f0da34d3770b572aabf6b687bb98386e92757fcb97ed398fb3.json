{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thit Lwin Win Thant\\\\Downloads\\\\InfoNest\\\\InfoNest-React-Frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // For making API calls\nimport '../styles/Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst infonestLogo = '/logo.png';\nconst userAvatar = '/avatar.png';\nconst HomePage = () => {\n  _s();\n  const navigate = useNavigate(); // Hook for navigation\n  const [username, setUsername] = useState('User');\n  const [messages, setMessages] = useState([]);\n  const [chatInput, setChatInput] = useState('');\n  const [sidebarHistory, setSidebarHistory] = useState([]);\n  const API_BASE_URL = 'http://localhost:8000/api';\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUsername = localStorage.getItem('username');\n    if (!token) {\n      alert('You are not logged in. Please log in first.');\n      navigate('/login');\n      return;\n    }\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n\n    // Fetch history only if messages are not already loaded (e.g., from a new chat action)\n    if (messages.length === 0) {\n      fetchChatHistory(token);\n    }\n  }, [navigate, messages.length]); // Depend on messages.length to re-fetch if needed\n\n  const fetchChatHistory = async token => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/history`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        const historyData = response.data.data;\n        const formattedMessages = [];\n        const newSidebarHistory = [];\n        historyData.forEach(entry => {\n          formattedMessages.push({\n            sender: 'user',\n            text: entry.userMessage\n          });\n          formattedMessages.push({\n            sender: 'bot',\n            text: entry.botResponse\n          });\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...');\n        });\n        setMessages(formattedMessages);\n        setSidebarHistory(newSidebarHistory);\n\n        // If no history, start with a greeting from the bot\n        if (formattedMessages.length === 0) {\n          setMessages([{\n            sender: 'bot',\n            text: 'Hello! How can I help you today?'\n          }]);\n        }\n      } else {\n        console.error('Failed to fetch chat history:', response.data.error);\n        alert('Could not load chat history. Please try again.');\n      }\n    } catch (error) {\n      console.error('Network error fetching chat history:', error);\n      if (error.response && error.response.status === 401) {\n        alert('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else {\n        alert('Network error. Could not connect to server for history.');\n      }\n    }\n  };\n  const sendMessage = async messageText => {\n    const token = localStorage.getItem('token');\n    if (!token || messageText.trim() === '') return;\n    const userMessage = {\n      sender: 'user',\n      text: messageText\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setChatInput('');\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat`, {\n        message: messageText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.botResponse;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: botResponse\n        }]);\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\n      } else {\n        const errorData = response.data;\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: `Error: ${errorData.error || 'Failed to get bot response.'}`\n        }]);\n      }\n    } catch (error) {\n      console.error('Network error sending message:', error);\n      let errorMessage = 'Network error. Could not connect to chatbot.';\n      if (error.response && error.response.status === 401) {\n        errorMessage = 'Session expired. Please log in again.';\n        localStorage.removeItem('token');\n        localStorage.removeItem('username');\n        navigate('/login');\n      } else if (error.response && error.response.data && error.response.data.error) {\n        errorMessage = `Error: ${error.response.data.error}`;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: errorMessage\n      }]);\n    }\n  };\n\n  // --- Function to handle starting a new chat ---\n  const handleNewChat = () => {\n    setMessages([]); // Clear all current messages\n    setMessages([{\n      sender: 'bot',\n      text: 'Hello! How can I help you today?'\n    }]);\n  };\n  const handleChatInputChange = e => {\n    setChatInput(e.target.value);\n  };\n  const handleSendButtonClick = () => {\n    sendMessage(chatInput);\n  };\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage(chatInput);\n    }\n  };\n  const handleQuickQuestionClick = e => {\n    sendMessage(e.target.textContent);\n  };\n  const handleLogout = () => {\n    // Clear user data from localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n\n    // Redirect to the login page\n    navigate('/login');\n  };\n  useEffect(() => {\n    const messagesContainer = document.querySelector('.chat-messages-container');\n    if (messagesContainer) {\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: infonestLogo,\n          alt: \"InfoNest Logo\",\n          className: \"circle-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"InfoNest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-btn\",\n        onClick: handleNewChat,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"25\",\n          height: \"20\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            d: \"M7.616 8.5h6.769q.212 0 .356-.144t.144-.357t-.144-.356t-.356-.143h-6.77q-.212 0-.356.144t-.143.357t.143.356t.357.143m0 4h3.769q.212 0 .356-.144t.144-.357t-.144-.356t-.356-.143h-3.77q-.212 0-.356.144t-.143.357t.143.356t.357.143m9.884 4H15q-.213 0-.356-.144t-.144-.357t.144-.356T15 15.5h2.5V13q0-.213.144-.356t.357-.144t.356.144t.143.356v2.5H21q.213 0 .356.144t.144.357t-.144.356T21 16.5h-2.5V19q0 .213-.144.356t-.357.144t-.356-.144T17.5 19zm-11.711 0l-1.6 1.599q-.185.185-.437.089q-.252-.097-.252-.369V5.116q0-.667.475-1.141t1.14-.475h11.77q.666 0 1.14.475t.475 1.14v4.331q0 .249-.164.404q-.165.156-.407.15q-1.237.027-2.274.378q-1.038.35-1.982 1.295q-.938.944-1.292 1.982T12 15.929q.006.242-.16.407t-.394.164z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), \"New chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"recent-title\",\n        children: \"RECENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"recent-list\",\n        children: sidebarHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: entry\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Log-Out-Btn\",\n        onClick: handleLogout,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"22\",\n          height: \"22\",\n          viewBox: \"0 0 14 14\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"currentColor\",\n            \"fill-rule\": \"evenodd\",\n            d: \"M0 1.5A1.5 1.5 0 0 1 1.5 0h7A1.5 1.5 0 0 1 10 1.5v1.939a2 2 0 0 0-.734 1.311H5.75a2.25 2.25 0 1 0 0 4.5h3.516A2 2 0 0 0 10 10.561V12.5A1.5 1.5 0 0 1 8.5 14h-7A1.5 1.5 0 0 1 0 12.5zm10.963 2.807A.75.75 0 0 0 10.5 5v1H5.75a1 1 0 0 0 0 2h4.75v1a.75.75 0 0 0 1.28.53l2-2a.75.75 0 0 0 0-1.06l-2-2a.75.75 0 0 0-.817-.163\",\n            \"clip-rule\": \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-container\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: msg.sender === 'user' ? 'user-message' : 'bot-message',\n            children: msg.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ask-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"chatInput\",\n          placeholder: \"Ask InfoNest anything\",\n          value: chatInput,\n          onChange: handleChatInputChange,\n          onKeyPress: handleInputKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sendChatBtn\",\n          onClick: handleSendButtonClick,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"pEWFrdg/5SMr9fDxJKqZ50JSxBE=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","infonestLogo","userAvatar","HomePage","_s","navigate","username","setUsername","messages","setMessages","chatInput","setChatInput","sidebarHistory","setSidebarHistory","API_BASE_URL","token","localStorage","getItem","storedUsername","alert","length","fetchChatHistory","response","get","headers","Authorization","status","historyData","data","formattedMessages","newSidebarHistory","forEach","entry","push","sender","text","userMessage","botResponse","substring","console","error","removeItem","sendMessage","messageText","trim","prevMessages","post","message","prevSidebar","errorData","errorMessage","handleNewChat","handleChatInputChange","e","target","value","handleSendButtonClick","handleInputKeyPress","key","handleQuickQuestionClick","textContent","handleLogout","messagesContainer","document","querySelector","scrollTop","scrollHeight","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","width","height","viewBox","fill","d","map","index","msg","type","id","placeholder","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Thit Lwin Win Thant/Downloads/InfoNest/InfoNest-React-Frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'; // For making API calls\r\nimport '../styles/Home.css';\r\n\r\nconst infonestLogo = '/logo.png';\r\nconst userAvatar = '/avatar.png';\r\n\r\nconst HomePage = () => {\r\n  const navigate = useNavigate(); // Hook for navigation\r\n  const [username, setUsername] = useState('User');\r\n  const [messages, setMessages] = useState([]);\r\n  const [chatInput, setChatInput] = useState('');\r\n  const [sidebarHistory, setSidebarHistory] = useState([]);\r\n\r\n  const API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUsername = localStorage.getItem('username');\r\n\r\n    if (!token) {\r\n      alert('You are not logged in. Please log in first.');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    if (storedUsername) {\r\n      setUsername(storedUsername);\r\n    }\r\n\r\n    // Fetch history only if messages are not already loaded (e.g., from a new chat action)\r\n    if (messages.length === 0) {\r\n      fetchChatHistory(token);\r\n    }\r\n  }, [navigate, messages.length]); // Depend on messages.length to re-fetch if needed\r\n\r\n  const fetchChatHistory = async (token) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/history`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        const historyData = response.data.data;\r\n        const formattedMessages = [];\r\n        const newSidebarHistory = [];\r\n\r\n        historyData.forEach(entry => {\r\n          formattedMessages.push({ sender: 'user', text: entry.userMessage });\r\n          formattedMessages.push({ sender: 'bot', text: entry.botResponse });\r\n          newSidebarHistory.push(entry.userMessage.substring(0, 25) + '...');\r\n        });\r\n\r\n        setMessages(formattedMessages);\r\n        setSidebarHistory(newSidebarHistory);\r\n\r\n        // If no history, start with a greeting from the bot\r\n        if (formattedMessages.length === 0) {\r\n          setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch chat history:', response.data.error);\r\n        alert('Could not load chat history. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error fetching chat history:', error);\r\n      if (error.response && error.response.status === 401) {\r\n        alert('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        navigate('/login');\r\n      } else {\r\n        alert('Network error. Could not connect to server for history.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (messageText) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token || messageText.trim() === '') return;\r\n\r\n    const userMessage = { sender: 'user', text: messageText };\r\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n    setChatInput('');\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/chat`,\r\n        { message: messageText },\r\n        { headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' } }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        const botResponse = response.data.botResponse;\r\n        setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: botResponse }]);\r\n        setSidebarHistory(prevSidebar => [...prevSidebar, messageText.substring(0, 25) + '...']);\r\n      } else {\r\n        const errorData = response.data;\r\n        setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: `Error: ${errorData.error || 'Failed to get bot response.'}` }]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Network error sending message:', error);\r\n      let errorMessage = 'Network error. Could not connect to chatbot.';\r\n      if (error.response && error.response.status === 401) {\r\n         errorMessage = 'Session expired. Please log in again.';\r\n         localStorage.removeItem('token');\r\n         localStorage.removeItem('username');\r\n         navigate('/login');\r\n      } else if (error.response && error.response.data && error.response.data.error) {\r\n         errorMessage = `Error: ${error.response.data.error}`;\r\n      }\r\n      setMessages((prevMessages) => [...prevMessages, { sender: 'bot', text: errorMessage }]);\r\n    }\r\n  };\r\n\r\n  // --- Function to handle starting a new chat ---\r\n  const handleNewChat = () => {\r\n    setMessages([]); // Clear all current messages\r\n    setMessages([{ sender: 'bot', text: 'Hello! How can I help you today?' }]);\r\n  };\r\n\r\n  const handleChatInputChange = (e) => {\r\n    setChatInput(e.target.value);\r\n  };\r\n\r\n  const handleSendButtonClick = () => {\r\n    sendMessage(chatInput);\r\n  };\r\n\r\n  const handleInputKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      sendMessage(chatInput);\r\n    }\r\n  };\r\n\r\n  const handleQuickQuestionClick = (e) => {\r\n    sendMessage(e.target.textContent);\r\n  };\r\n  \r\n  const handleLogout = () => {\r\n  // Clear user data from localStorage\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('username');\r\n\r\n  // Redirect to the login page\r\n  navigate('/login');\r\n};\r\n\r\n  useEffect(() => {\r\n    const messagesContainer = document.querySelector('.chat-messages-container');\r\n    if (messagesContainer) {\r\n      messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <aside className=\"sidebar\">\r\n        <div className=\"logo-section\">\r\n          <img src={infonestLogo} alt=\"InfoNest Logo\" className=\"circle-logo\" />\r\n          <h1>InfoNest</h1>\r\n        </div>\r\n\r\n        <button className=\"new-chat-btn\" onClick={handleNewChat}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"20\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M7.616 8.5h6.769q.212 0 .356-.144t.144-.357t-.144-.356t-.356-.143h-6.77q-.212 0-.356.144t-.143.357t.143.356t.357.143m0 4h3.769q.212 0 .356-.144t.144-.357t-.144-.356t-.356-.143h-3.77q-.212 0-.356.144t-.143.357t.143.356t.357.143m9.884 4H15q-.213 0-.356-.144t-.144-.357t.144-.356T15 15.5h2.5V13q0-.213.144-.356t.357-.144t.356.144t.143.356v2.5H21q.213 0 .356.144t.144.357t-.144.356T21 16.5h-2.5V19q0 .213-.144.356t-.357.144t-.356-.144T17.5 19zm-11.711 0l-1.6 1.599q-.185.185-.437.089q-.252-.097-.252-.369V5.116q0-.667.475-1.141t1.14-.475h11.77q.666 0 1.14.475t.475 1.14v4.331q0 .249-.164.404q-.165.156-.407.15q-1.237.027-2.274.378q-1.038.35-1.982 1.295q-.938.944-1.292 1.982T12 15.929q.006.242-.16.407t-.394.164z\"/></svg>\r\n          New chat\r\n        </button>\r\n\r\n        <p className=\"recent-title\">RECENT</p>\r\n        <ul className=\"recent-list\">\r\n          {sidebarHistory.map((entry, index) => (\r\n            <li key={index}>{entry}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <button className=\"Log-Out-Btn\" onClick={handleLogout}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 14 14\">\r\n          <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M0 1.5A1.5 1.5 0 0 1 1.5 0h7A1.5 1.5 0 0 1 10 1.5v1.939a2 2 0 0 0-.734 1.311H5.75a2.25 2.25 0 1 0 0 4.5h3.516A2 2 0 0 0 10 10.561V12.5A1.5 1.5 0 0 1 8.5 14h-7A1.5 1.5 0 0 1 0 12.5zm10.963 2.807A.75.75 0 0 0 10.5 5v1H5.75a1 1 0 0 0 0 2h4.75v1a.75.75 0 0 0 1.28.53l2-2a.75.75 0 0 0 0-1.06l-2-2a.75.75 0 0 0-.817-.163\" clip-rule=\"evenodd\"/>\r\n          </svg>\r\n          Logout\r\n        </button>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <div className=\"chat-messages-container\">\r\n          <ul>\r\n            {messages.map((msg, index) => (\r\n              <li\r\n                key={index}\r\n                className={msg.sender === 'user' ? 'user-message' : 'bot-message'}\r\n              >\r\n                {msg.text}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"ask-container\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"chatInput\"\r\n            placeholder=\"Ask InfoNest anything\"\r\n            value={chatInput}\r\n            onChange={handleChatInputChange}\r\n            onKeyPress={handleInputKeyPress}\r\n          />\r\n          <button id=\"sendChatBtn\" onClick={handleSendButtonClick}>Send</button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}